Function(
 Function {
  head: Destructured(
   FunctionHeadDestructured {
    ellipsis: true,
    identifier: None,
    arguments: [
     FunctionHeadDestructuredArgument {
      identifier: "lib",
      default: None,
     },
    ],
   },
  ),
  body: With(
   With {
    expression: Identifier(
     Identifier {
      id: "lib",
      span: Span {
       start: Position {
        line: 3,
        column: 6,
       },
       end: Position {
        line: 3,
        column: 9,
       },
      },
     },
    ),
    target: Map(
     Map {
      recursive: false,
      bindings: [
       KeyValue(
        BindingKeyValue {
         from: [
          Raw(
           PartRaw {
            content: "imports",
            span: Span {
             start: Position {
              line: 6,
              column: 3,
             },
             end: Position {
              line: 6,
              column: 10,
             },
            },
           },
          ),
         ],
         to: List(
          List {
           elements: [
            Path(
             Path {
              parts: [
               Raw(
                PartRaw {
                 content: "../virtualisation/virtualbox-image.nix",
                 span: Span {
                  start: Position {
                   line: 7,
                   column: 7,
                  },
                  end: Position {
                   line: 7,
                   column: 45,
                  },
                 },
                },
               ),
              ],
              span: Span {
               start: Position {
                line: 7,
                column: 7,
               },
               end: Position {
                line: 7,
                column: 45,
               },
              },
             },
            ),
            Path(
             Path {
              parts: [
               Raw(
                PartRaw {
                 content: "../installer/cd-dvd/channel.nix",
                 span: Span {
                  start: Position {
                   line: 8,
                   column: 7,
                  },
                  end: Position {
                   line: 8,
                   column: 38,
                  },
                 },
                },
               ),
              ],
              span: Span {
               start: Position {
                line: 8,
                column: 7,
               },
               end: Position {
                line: 8,
                column: 38,
               },
              },
             },
            ),
            Path(
             Path {
              parts: [
               Raw(
                PartRaw {
                 content: "../profiles/demo.nix",
                 span: Span {
                  start: Position {
                   line: 9,
                   column: 7,
                  },
                  end: Position {
                   line: 9,
                   column: 27,
                  },
                 },
                },
               ),
              ],
              span: Span {
               start: Position {
                line: 9,
                column: 7,
               },
               end: Position {
                line: 9,
                column: 27,
               },
              },
             },
            ),
            Path(
             Path {
              parts: [
               Raw(
                PartRaw {
                 content: "../profiles/clone-config.nix",
                 span: Span {
                  start: Position {
                   line: 10,
                   column: 7,
                  },
                  end: Position {
                   line: 10,
                   column: 35,
                  },
                 },
                },
               ),
              ],
              span: Span {
               start: Position {
                line: 10,
                column: 7,
               },
               end: Position {
                line: 10,
                column: 35,
               },
              },
             },
            ),
           ],
           span: Span {
            start: Position {
             line: 7,
             column: 5,
            },
            end: Position {
             line: 11,
             column: 6,
            },
           },
          },
         ),
        },
       ),
       KeyValue(
        BindingKeyValue {
         from: [
          Raw(
           PartRaw {
            content: "boot",
            span: Span {
             start: Position {
              line: 14,
              column: 3,
             },
             end: Position {
              line: 14,
              column: 7,
             },
            },
           },
          ),
          Raw(
           PartRaw {
            content: "loader",
            span: Span {
             start: Position {
              line: 14,
              column: 8,
             },
             end: Position {
              line: 14,
              column: 14,
             },
            },
           },
          ),
          Raw(
           PartRaw {
            content: "grub",
            span: Span {
             start: Position {
              line: 14,
              column: 15,
             },
             end: Position {
              line: 14,
              column: 19,
             },
            },
           },
          ),
          Raw(
           PartRaw {
            content: "fsIdentifier",
            span: Span {
             start: Position {
              line: 14,
              column: 20,
             },
             end: Position {
              line: 14,
              column: 32,
             },
            },
           },
          ),
         ],
         to: String(
          String_ {
           parts: [
            Raw(
             PartRaw {
              content: "provided",
              span: Span {
               start: Position {
                line: 14,
                column: 36,
               },
               end: Position {
                line: 14,
                column: 44,
               },
              },
             },
            ),
           ],
           span: Span {
            start: Position {
             line: 14,
             column: 35,
            },
            end: Position {
             line: 14,
             column: 45,
            },
           },
          },
         ),
        },
       ),
       KeyValue(
        BindingKeyValue {
         from: [
          Raw(
           PartRaw {
            content: "users",
            span: Span {
             start: Position {
              line: 17,
              column: 3,
             },
             end: Position {
              line: 17,
              column: 8,
             },
            },
           },
          ),
          Raw(
           PartRaw {
            content: "users",
            span: Span {
             start: Position {
              line: 17,
              column: 9,
             },
             end: Position {
              line: 17,
              column: 14,
             },
            },
           },
          ),
          Raw(
           PartRaw {
            content: "demo",
            span: Span {
             start: Position {
              line: 17,
              column: 15,
             },
             end: Position {
              line: 17,
              column: 19,
             },
            },
           },
          ),
          Raw(
           PartRaw {
            content: "extraGroups",
            span: Span {
             start: Position {
              line: 17,
              column: 20,
             },
             end: Position {
              line: 17,
              column: 31,
             },
            },
           },
          ),
         ],
         to: List(
          List {
           elements: [
            String(
             String_ {
              parts: [
               Raw(
                PartRaw {
                 content: "vboxsf",
                 span: Span {
                  start: Position {
                   line: 17,
                   column: 37,
                  },
                  end: Position {
                   line: 17,
                   column: 43,
                  },
                 },
                },
               ),
              ],
              span: Span {
               start: Position {
                line: 17,
                column: 36,
               },
               end: Position {
                line: 17,
                column: 44,
               },
              },
             },
            ),
           ],
           span: Span {
            start: Position {
             line: 17,
             column: 34,
            },
            end: Position {
             line: 17,
             column: 46,
            },
           },
          },
         ),
        },
       ),
       KeyValue(
        BindingKeyValue {
         from: [
          Raw(
           PartRaw {
            content: "services",
            span: Span {
             start: Position {
              line: 21,
              column: 3,
             },
             end: Position {
              line: 21,
              column: 11,
             },
            },
           },
          ),
          Raw(
           PartRaw {
            content: "xserver",
            span: Span {
             start: Position {
              line: 21,
              column: 12,
             },
             end: Position {
              line: 21,
              column: 19,
             },
            },
           },
          ),
          Raw(
           PartRaw {
            content: "videoDrivers",
            span: Span {
             start: Position {
              line: 21,
              column: 20,
             },
             end: Position {
              line: 21,
              column: 32,
             },
            },
           },
          ),
         ],
         to: FunctionApplication(
          FunctionApplication {
           function: Identifier(
            Identifier {
             id: "mkOverride",
             span: Span {
              start: Position {
               line: 21,
               column: 35,
              },
              end: Position {
               line: 21,
               column: 45,
              },
             },
            },
           ),
           arguments: [
            Integer(
             Integer {
              value: "40",
              span: Span {
               start: Position {
                line: 21,
                column: 46,
               },
               end: Position {
                line: 21,
                column: 48,
               },
              },
             },
            ),
            List(
             List {
              elements: [
               String(
                String_ {
                 parts: [
                  Raw(
                   PartRaw {
                    content: "virtualbox",
                    span: Span {
                     start: Position {
                      line: 21,
                      column: 52,
                     },
                     end: Position {
                      line: 21,
                      column: 62,
                     },
                    },
                   },
                  ),
                 ],
                 span: Span {
                  start: Position {
                   line: 21,
                   column: 51,
                  },
                  end: Position {
                   line: 21,
                   column: 63,
                  },
                 },
                },
               ),
               String(
                String_ {
                 parts: [
                  Raw(
                   PartRaw {
                    content: "vmware",
                    span: Span {
                     start: Position {
                      line: 21,
                      column: 65,
                     },
                     end: Position {
                      line: 21,
                      column: 71,
                     },
                    },
                   },
                  ),
                 ],
                 span: Span {
                  start: Position {
                   line: 21,
                   column: 64,
                  },
                  end: Position {
                   line: 21,
                   column: 72,
                  },
                 },
                },
               ),
               String(
                String_ {
                 parts: [
                  Raw(
                   PartRaw {
                    content: "cirrus",
                    span: Span {
                     start: Position {
                      line: 21,
                      column: 74,
                     },
                     end: Position {
                      line: 21,
                      column: 80,
                     },
                    },
                   },
                  ),
                 ],
                 span: Span {
                  start: Position {
                   line: 21,
                   column: 73,
                  },
                  end: Position {
                   line: 21,
                   column: 81,
                  },
                 },
                },
               ),
               String(
                String_ {
                 parts: [
                  Raw(
                   PartRaw {
                    content: "vesa",
                    span: Span {
                     start: Position {
                      line: 21,
                      column: 83,
                     },
                     end: Position {
                      line: 21,
                      column: 87,
                     },
                    },
                   },
                  ),
                 ],
                 span: Span {
                  start: Position {
                   line: 21,
                   column: 82,
                  },
                  end: Position {
                   line: 21,
                   column: 88,
                  },
                 },
                },
               ),
               String(
                String_ {
                 parts: [
                  Raw(
                   PartRaw {
                    content: "modesetting",
                    span: Span {
                     start: Position {
                      line: 21,
                      column: 90,
                     },
                     end: Position {
                      line: 21,
                      column: 101,
                     },
                    },
                   },
                  ),
                 ],
                 span: Span {
                  start: Position {
                   line: 21,
                   column: 89,
                  },
                  end: Position {
                   line: 21,
                   column: 102,
                  },
                 },
                },
               ),
              ],
              span: Span {
               start: Position {
                line: 21,
                column: 49,
               },
               end: Position {
                line: 21,
                column: 104,
               },
              },
             },
            ),
           ],
          },
         ),
        },
       ),
       KeyValue(
        BindingKeyValue {
         from: [
          Raw(
           PartRaw {
            content: "powerManagement",
            span: Span {
             start: Position {
              line: 23,
              column: 3,
             },
             end: Position {
              line: 23,
              column: 18,
             },
            },
           },
          ),
          Raw(
           PartRaw {
            content: "enable",
            span: Span {
             start: Position {
              line: 23,
              column: 19,
             },
             end: Position {
              line: 23,
              column: 25,
             },
            },
           },
          ),
         ],
         to: Identifier(
          Identifier {
           id: "false",
           span: Span {
            start: Position {
             line: 23,
             column: 28,
            },
            end: Position {
             line: 23,
             column: 33,
            },
           },
          },
         ),
        },
       ),
       KeyValue(
        BindingKeyValue {
         from: [
          Raw(
           PartRaw {
            content: "system",
            span: Span {
             start: Position {
              line: 24,
              column: 3,
             },
             end: Position {
              line: 24,
              column: 9,
             },
            },
           },
          ),
          Raw(
           PartRaw {
            content: "stateVersion",
            span: Span {
             start: Position {
              line: 24,
              column: 10,
             },
             end: Position {
              line: 24,
              column: 22,
             },
            },
           },
          ),
         ],
         to: FunctionApplication(
          FunctionApplication {
           function: Identifier(
            Identifier {
             id: "mkDefault",
             span: Span {
              start: Position {
               line: 24,
               column: 25,
              },
              end: Position {
               line: 24,
               column: 34,
              },
             },
            },
           ),
           arguments: [
            String(
             String_ {
              parts: [
               Raw(
                PartRaw {
                 content: "18.03",
                 span: Span {
                  start: Position {
                   line: 24,
                   column: 36,
                  },
                  end: Position {
                   line: 24,
                   column: 41,
                  },
                 },
                },
               ),
              ],
              span: Span {
               start: Position {
                line: 24,
                column: 35,
               },
               end: Position {
                line: 24,
                column: 42,
               },
              },
             },
            ),
           ],
          },
         ),
        },
       ),
       KeyValue(
        BindingKeyValue {
         from: [
          Raw(
           PartRaw {
            content: "installer",
            span: Span {
             start: Position {
              line: 26,
              column: 3,
             },
             end: Position {
              line: 26,
              column: 12,
             },
            },
           },
          ),
          Raw(
           PartRaw {
            content: "cloneConfigExtra",
            span: Span {
             start: Position {
              line: 26,
              column: 13,
             },
             end: Position {
              line: 26,
              column: 29,
             },
            },
           },
          ),
         ],
         to: IndentedString(
          IndentedString {
           parts: [
            Raw(
             PartRaw {
              content: "# Let demo build as a trusted user.\n# nix.settings.trusted-users = [ \"demo\" ];\n\n# Mount a VirtualBox shared folder.\n# This is configurable in the VirtualBox menu at\n# Machine / Settings / Shared Folders.\n# fileSystems.\"/mnt\" = {\n#   fsType = \"vboxsf\";\n#   device = \"nameofdevicetomount\";\n#   options = [ \"rw\" ];\n# };\n\n# By default, the NixOS VirtualBox demo image includes SDDM and Plasma.\n# If you prefer another desktop manager or display manager, you may want\n# to disable the default.\n# services.xserver.desktopManager.plasma5.enable = lib.mkForce false;\n# services.xserver.displayManager.sddm.enable = lib.mkForce false;\n\n# Enable GDM/GNOME by uncommenting above two lines and two lines below.\n# services.xserver.displayManager.gdm.enable = true;\n# services.xserver.desktopManager.gnome.enable = true;\n\n# Set your time zone.\n# time.timeZone = \"Europe/Amsterdam\";\n\n# List packages installed in system profile. To search, run:\n# \\$ nix search wget\n# environment.systemPackages = with pkgs; [\n#   wget vim\n# ];\n\n# Enable the OpenSSH daemon.\n# services.openssh.enable = true;\n",
              span: Span {
               start: Position {
                line: 27,
                column: 1,
               },
               end: Position {
                line: 60,
                column: 3,
               },
              },
             },
            ),
           ],
           span: Span {
            start: Position {
             line: 26,
             column: 32,
            },
            end: Position {
             line: 60,
             column: 5,
            },
           },
          },
         ),
        },
       ),
      ],
      span: Span {
       start: Position {
        line: 5,
        column: 1,
       },
       end: Position {
        line: 61,
        column: 2,
       },
      },
     },
    ),
    span: Span {
     start: Position {
      line: 3,
      column: 1,
     },
     end: Position {
      line: 61,
      column: 2,
     },
    },
   },
  ),
  span: Span {
   start: Position {
    line: 1,
    column: 1,
   },
   end: Position {
    line: 61,
    column: 2,
   },
  },
 },
)