Function(
 Function {
  head: Simple(
   FunctionHeadSimple {
    identifier: "name",
   },
  ),
  body: Function(
   Function {
    head: Simple(
     FunctionHeadSimple {
      identifier: "default",
     },
    ),
    body: LetIn(
     LetIn {
      bindings: [
       KeyValue(
        BindingKeyValue {
         from: [
          Raw(
           PartRaw {
            content: "value",
            span: Span {
             start: Position {
              line: 3,
              column: 5,
             },
             end: Position {
              line: 3,
              column: 10,
             },
            },
           },
          ),
         ],
         to: FunctionApplication(
          FunctionApplication {
           function: PropertyAccess(
            PropertyAccess {
             expression: Identifier(
              Identifier {
               id: "builtins",
               span: Span {
                start: Position {
                 line: 3,
                 column: 13,
                },
                end: Position {
                 line: 3,
                 column: 21,
                },
               },
              },
             ),
             attribute_path: [
              Raw(
               PartRaw {
                content: "getEnv",
                span: Span {
                 start: Position {
                  line: 3,
                  column: 22,
                 },
                 end: Position {
                  line: 3,
                  column: 28,
                 },
                },
               },
              ),
             ],
             default: None,
            },
           ),
           arguments: [
            Identifier(
             Identifier {
              id: "name",
              span: Span {
               start: Position {
                line: 3,
                column: 29,
               },
               end: Position {
                line: 3,
                column: 33,
               },
              },
             },
            ),
           ],
          },
         ),
        },
       ),
      ],
      target: IfThenElse(
       IfThenElse {
        predicate: BinaryOperation(
         BinaryOperation {
          left: Identifier(
           Identifier {
            id: "value",
            span: Span {
             start: Position {
              line: 4,
              column: 4,
             },
             end: Position {
              line: 4,
              column: 9,
             },
            },
           },
          ),
          operator: EqualTo,
          right: String(
           String_ {
            parts: [],
            span: Span {
             start: Position {
              line: 4,
              column: 13,
             },
             end: Position {
              line: 4,
              column: 15,
             },
            },
           },
          ),
         },
        ),
        then: Identifier(
         Identifier {
          id: "default",
          span: Span {
           start: Position {
            line: 4,
            column: 21,
           },
           end: Position {
            line: 4,
            column: 28,
           },
          },
         },
        ),
        else_: Identifier(
         Identifier {
          id: "value",
          span: Span {
           start: Position {
            line: 4,
            column: 34,
           },
           end: Position {
            line: 4,
            column: 39,
           },
          },
         },
        ),
        span: Span {
         start: Position {
          line: 4,
          column: 1,
         },
         end: Position {
          line: 4,
          column: 39,
         },
        },
       },
      ),
      span: Span {
       start: Position {
        line: 3,
        column: 1,
       },
       end: Position {
        line: 4,
        column: 39,
       },
      },
     },
    ),
    span: Span {
     start: Position {
      line: 2,
      column: 7,
     },
     end: Position {
      line: 4,
      column: 39,
     },
    },
   },
  ),
  span: Span {
   start: Position {
    line: 2,
    column: 1,
   },
   end: Position {
    line: 4,
    column: 39,
   },
  },
 },
)