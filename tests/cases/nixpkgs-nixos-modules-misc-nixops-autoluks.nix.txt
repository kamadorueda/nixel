Function(
 Function {
  head: Destructured(
   FunctionHeadDestructured {
    identifier: None,
    arguments: [
     FunctionHeadDestructuredArgument {
      identifier: "config",
      default: None,
     },
     FunctionHeadDestructuredArgument {
      identifier: "options",
      default: None,
     },
     FunctionHeadDestructuredArgument {
      identifier: "lib",
      default: None,
     },
    ],
    ellipsis: true,
   },
  ),
  body: LetIn(
   LetIn {
    bindings: [
     KeyValue(
      BindingKeyValue {
       from: [
        Raw(
         PartRaw {
          content: "path",
          span: Span {
           start: Position {
            line: 3,
            column: 3,
           },
           end: Position {
            line: 3,
            column: 7,
           },
          },
         },
        ),
       ],
       to: List(
        List {
         elements: [
          String(
           String_ {
            parts: [
             Raw(
              PartRaw {
               content: "deployment",
               span: Span {
                start: Position {
                 line: 3,
                 column: 13,
                },
                end: Position {
                 line: 3,
                 column: 23,
                },
               },
              },
             ),
            ],
            span: Span {
             start: Position {
              line: 3,
              column: 12,
             },
             end: Position {
              line: 3,
              column: 24,
             },
            },
           },
          ),
          String(
           String_ {
            parts: [
             Raw(
              PartRaw {
               content: "autoLuks",
               span: Span {
                start: Position {
                 line: 3,
                 column: 26,
                },
                end: Position {
                 line: 3,
                 column: 34,
                },
               },
              },
             ),
            ],
            span: Span {
             start: Position {
              line: 3,
              column: 25,
             },
             end: Position {
              line: 3,
              column: 35,
             },
            },
           },
          ),
         ],
         span: Span {
          start: Position {
           line: 3,
           column: 10,
          },
          end: Position {
           line: 3,
           column: 37,
          },
         },
        },
       ),
      },
     ),
     KeyValue(
      BindingKeyValue {
       from: [
        Raw(
         PartRaw {
          content: "hasAutoLuksConfig",
          span: Span {
           start: Position {
            line: 4,
            column: 3,
           },
           end: Position {
            line: 4,
            column: 20,
           },
          },
         },
        ),
       ],
       to: BinaryOperation(
        BinaryOperation {
         left: FunctionApplication(
          FunctionApplication {
           function: PropertyAccess(
            PropertyAccess {
             expression: Identifier(
              Identifier {
               id: "lib",
               span: Span {
                start: Position {
                 line: 4,
                 column: 23,
                },
                end: Position {
                 line: 4,
                 column: 26,
                },
               },
              },
             ),
             attribute_path: [
              Raw(
               PartRaw {
                content: "hasAttrByPath",
                span: Span {
                 start: Position {
                  line: 4,
                  column: 27,
                 },
                 end: Position {
                  line: 4,
                  column: 40,
                 },
                },
               },
              ),
             ],
             default: None,
            },
           ),
           arguments: [
            Identifier(
             Identifier {
              id: "path",
              span: Span {
               start: Position {
                line: 4,
                column: 41,
               },
               end: Position {
                line: 4,
                column: 45,
               },
              },
             },
            ),
            Identifier(
             Identifier {
              id: "config",
              span: Span {
               start: Position {
                line: 4,
                column: 46,
               },
               end: Position {
                line: 4,
                column: 52,
               },
              },
             },
            ),
           ],
          },
         ),
         operator: LogicalAnd,
         right: BinaryOperation(
          BinaryOperation {
           left: FunctionApplication(
            FunctionApplication {
             function: PropertyAccess(
              PropertyAccess {
               expression: Identifier(
                Identifier {
                 id: "lib",
                 span: Span {
                  start: Position {
                   line: 4,
                   column: 57,
                  },
                  end: Position {
                   line: 4,
                   column: 60,
                  },
                 },
                },
               ),
               attribute_path: [
                Raw(
                 PartRaw {
                  content: "attrByPath",
                  span: Span {
                   start: Position {
                    line: 4,
                    column: 61,
                   },
                   end: Position {
                    line: 4,
                    column: 71,
                   },
                  },
                 },
                ),
               ],
               default: None,
              },
             ),
             arguments: [
              Identifier(
               Identifier {
                id: "path",
                span: Span {
                 start: Position {
                  line: 4,
                  column: 72,
                 },
                 end: Position {
                  line: 4,
                  column: 76,
                 },
                },
               },
              ),
              Map(
               Map {
                bindings: [],
                recursive: false,
                span: Span {
                 start: Position {
                  line: 4,
                  column: 77,
                 },
                 end: Position {
                  line: 4,
                  column: 79,
                 },
                },
               },
              ),
              Identifier(
               Identifier {
                id: "config",
                span: Span {
                 start: Position {
                  line: 4,
                  column: 80,
                 },
                 end: Position {
                  line: 4,
                  column: 86,
                 },
                },
               },
              ),
             ],
            },
           ),
           operator: NotEqualTo,
           right: Map(
            Map {
             bindings: [],
             recursive: false,
             span: Span {
              start: Position {
               line: 4,
               column: 91,
              },
              end: Position {
               line: 4,
               column: 93,
              },
             },
            },
           ),
          },
         ),
        },
       ),
      },
     ),
     Inherit(
      BindingInherit {
       from: Some(
        PropertyAccess(
         PropertyAccess {
          expression: Identifier(
           Identifier {
            id: "config",
            span: Span {
             start: Position {
              line: 6,
              column: 12,
             },
             end: Position {
              line: 6,
              column: 18,
             },
            },
           },
          ),
          attribute_path: [
           Raw(
            PartRaw {
             content: "nixops",
             span: Span {
              start: Position {
               line: 6,
               column: 19,
              },
              end: Position {
               line: 6,
               column: 25,
              },
             },
            },
           ),
          ],
          default: None,
         },
        ),
       ),
       attributes: [
        Raw(
         PartRaw {
          content: "enableDeprecatedAutoLuks",
          span: Span {
           start: Position {
            line: 6,
            column: 27,
           },
           end: Position {
            line: 6,
            column: 51,
           },
          },
         },
        ),
       ],
       span: Span {
        start: Position {
         line: 2,
         column: 4,
        },
        end: Position {
         line: 6,
         column: 52,
        },
       },
      },
     ),
    ],
    target: Map(
     Map {
      bindings: [
       KeyValue(
        BindingKeyValue {
         from: [
          Raw(
           PartRaw {
            content: "options",
            span: Span {
             start: Position {
              line: 8,
              column: 3,
             },
             end: Position {
              line: 8,
              column: 10,
             },
            },
           },
          ),
          Raw(
           PartRaw {
            content: "nixops",
            span: Span {
             start: Position {
              line: 8,
              column: 11,
             },
             end: Position {
              line: 8,
              column: 17,
             },
            },
           },
          ),
          Raw(
           PartRaw {
            content: "enableDeprecatedAutoLuks",
            span: Span {
             start: Position {
              line: 8,
              column: 18,
             },
             end: Position {
              line: 8,
              column: 42,
             },
            },
           },
          ),
         ],
         to: FunctionApplication(
          FunctionApplication {
           function: PropertyAccess(
            PropertyAccess {
             expression: Identifier(
              Identifier {
               id: "lib",
               span: Span {
                start: Position {
                 line: 8,
                 column: 45,
                },
                end: Position {
                 line: 8,
                 column: 48,
                },
               },
              },
             ),
             attribute_path: [
              Raw(
               PartRaw {
                content: "mkEnableOption",
                span: Span {
                 start: Position {
                  line: 8,
                  column: 49,
                 },
                 end: Position {
                  line: 8,
                  column: 63,
                 },
                },
               },
              ),
             ],
             default: None,
            },
           ),
           arguments: [
            FunctionApplication(
             FunctionApplication {
              function: PropertyAccess(
               PropertyAccess {
                expression: Identifier(
                 Identifier {
                  id: "lib",
                  span: Span {
                   start: Position {
                    line: 8,
                    column: 65,
                   },
                   end: Position {
                    line: 8,
                    column: 68,
                   },
                  },
                 },
                ),
                attribute_path: [
                 Raw(
                  PartRaw {
                   content: "mdDoc",
                   span: Span {
                    start: Position {
                     line: 8,
                     column: 69,
                    },
                    end: Position {
                     line: 8,
                     column: 74,
                    },
                   },
                  },
                 ),
                ],
                default: None,
               },
              ),
              arguments: [
               String(
                String_ {
                 parts: [
                  Raw(
                   PartRaw {
                    content: "Enable the deprecated NixOps AutoLuks module",
                    span: Span {
                     start: Position {
                      line: 8,
                      column: 76,
                     },
                     end: Position {
                      line: 8,
                      column: 120,
                     },
                    },
                   },
                  ),
                 ],
                 span: Span {
                  start: Position {
                   line: 8,
                   column: 75,
                  },
                  end: Position {
                   line: 8,
                   column: 121,
                  },
                 },
                },
               ),
              ],
             },
            ),
           ],
          },
         ),
        },
       ),
       KeyValue(
        BindingKeyValue {
         from: [
          Raw(
           PartRaw {
            content: "config",
            span: Span {
             start: Position {
              line: 10,
              column: 3,
             },
             end: Position {
              line: 10,
              column: 9,
             },
            },
           },
          ),
         ],
         to: Map(
          Map {
           bindings: [
            KeyValue(
             BindingKeyValue {
              from: [
               Raw(
                PartRaw {
                 content: "assertions",
                 span: Span {
                  start: Position {
                   line: 11,
                   column: 5,
                  },
                  end: Position {
                   line: 11,
                   column: 15,
                  },
                 },
                },
               ),
              ],
              to: List(
               List {
                elements: [
                 Map(
                  Map {
                   bindings: [
                    KeyValue(
                     BindingKeyValue {
                      from: [
                       Raw(
                        PartRaw {
                         content: "assertion",
                         span: Span {
                          start: Position {
                           line: 13,
                           column: 9,
                          },
                          end: Position {
                           line: 13,
                           column: 18,
                          },
                         },
                        },
                       ),
                      ],
                      to: IfThenElse(
                       IfThenElse {
                        predicate: Identifier(
                         Identifier {
                          id: "hasAutoLuksConfig",
                          span: Span {
                           start: Position {
                            line: 13,
                            column: 24,
                           },
                           end: Position {
                            line: 13,
                            column: 41,
                           },
                          },
                         },
                        ),
                        then: BinaryOperation(
                         BinaryOperation {
                          left: Identifier(
                           Identifier {
                            id: "hasAutoLuksConfig",
                            span: Span {
                             start: Position {
                              line: 13,
                              column: 47,
                             },
                             end: Position {
                              line: 13,
                              column: 64,
                             },
                            },
                           },
                          ),
                          operator: LogicalAnd,
                          right: Identifier(
                           Identifier {
                            id: "enableDeprecatedAutoLuks",
                            span: Span {
                             start: Position {
                              line: 13,
                              column: 68,
                             },
                             end: Position {
                              line: 13,
                              column: 92,
                             },
                            },
                           },
                          ),
                         },
                        ),
                        else_: Identifier(
                         Identifier {
                          id: "true",
                          span: Span {
                           start: Position {
                            line: 13,
                            column: 98,
                           },
                           end: Position {
                            line: 13,
                            column: 102,
                           },
                          },
                         },
                        ),
                        span: Span {
                         start: Position {
                          line: 13,
                          column: 21,
                         },
                         end: Position {
                          line: 13,
                          column: 102,
                         },
                        },
                       },
                      ),
                     },
                    ),
                    KeyValue(
                     BindingKeyValue {
                      from: [
                       Raw(
                        PartRaw {
                         content: "message",
                         span: Span {
                          start: Position {
                           line: 14,
                           column: 9,
                          },
                          end: Position {
                           line: 14,
                           column: 16,
                          },
                         },
                        },
                       ),
                      ],
                      to: IndentedString(
                       IndentedString {
                        parts: [
                         Raw(
                          PartRaw {
                           content: "⚠\u{fe0f}  !!! WARNING !!! ⚠\u{fe0f}\n\n  NixOps autoLuks is deprecated. The feature was never widely used and the maintenance did outgrow the benefit.\n  If you still want to use the module:\n    a) Please raise your voice in the issue tracking usage of the module:\n       https://github.com/NixOS/nixpkgs/issues/62211\n    b) make sure you set the `_netdev` option for each of the file\n       systems referring to block devices provided by the autoLuks module.\n\n       ⚠\u{fe0f} If you do not set the option your system will not boot anymore! ⚠\u{fe0f}\n\n        {\n          fileSystems.\"/secret\" = { options = [ \"_netdev\" ]; };\n        }\n\n    b) set the option >nixops.enableDeprecatedAutoLuks = true< to remove this error.\n\n\n  For more details read through the following resources:\n    - https://github.com/NixOS/nixops/pull/1156\n    - https://github.com/NixOS/nixpkgs/issues/47550\n    - https://github.com/NixOS/nixpkgs/issues/62211\n    - https://github.com/NixOS/nixpkgs/pull/61321\n",
                           span: Span {
                            start: Position {
                             line: 15,
                             column: 1,
                            },
                            end: Position {
                             line: 38,
                             column: 9,
                            },
                           },
                          },
                         ),
                        ],
                        span: Span {
                         start: Position {
                          line: 14,
                          column: 19,
                         },
                         end: Position {
                          line: 38,
                          column: 11,
                         },
                        },
                       },
                      ),
                     },
                    ),
                   ],
                   recursive: false,
                   span: Span {
                    start: Position {
                     line: 12,
                     column: 7,
                    },
                    end: Position {
                     line: 39,
                     column: 8,
                    },
                   },
                  },
                 ),
                ],
                span: Span {
                 start: Position {
                  line: 11,
                  column: 18,
                 },
                 end: Position {
                  line: 40,
                  column: 6,
                 },
                },
               },
              ),
             },
            ),
           ],
           recursive: false,
           span: Span {
            start: Position {
             line: 10,
             column: 12,
            },
            end: Position {
             line: 41,
             column: 4,
            },
           },
          },
         ),
        },
       ),
      ],
      recursive: false,
      span: Span {
       start: Position {
        line: 7,
        column: 4,
       },
       end: Position {
        line: 43,
        column: 2,
       },
      },
     },
    ),
    span: Span {
     start: Position {
      line: 2,
      column: 1,
     },
     end: Position {
      line: 43,
      column: 2,
     },
    },
   },
  ),
  span: Span {
   start: Position {
    line: 1,
    column: 1,
   },
   end: Position {
    line: 43,
    column: 2,
   },
  },
 },
)