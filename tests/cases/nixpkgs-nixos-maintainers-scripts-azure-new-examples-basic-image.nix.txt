LetIn(
 LetIn {
  bindings: [
   KeyValue(
    BindingKeyValue {
     from: [
      Raw(
       PartRaw {
        content: "pkgs",
        span: Span {
         start: Position {
          line: 2,
          column: 3,
         },
         end: Position {
          line: 2,
          column: 7,
         },
        },
       },
      ),
     ],
     to: FunctionApplication(
      FunctionApplication {
       function: Identifier(
        Identifier {
         id: "import",
         span: Span {
          start: Position {
           line: 2,
           column: 11,
          },
          end: Position {
           line: 2,
           column: 17,
          },
         },
        },
       ),
       arguments: [
        Path(
         Path {
          parts: [
           Raw(
            PartRaw {
             content: "../../../../../../default.nix",
             span: Span {
              start: Position {
               line: 2,
               column: 18,
              },
              end: Position {
               line: 2,
               column: 47,
              },
             },
            },
           ),
          ],
          span: Span {
           start: Position {
            line: 2,
            column: 18,
           },
           end: Position {
            line: 2,
            column: 47,
           },
          },
         },
        ),
        Map(
         Map {
          recursive: false,
          bindings: [],
          span: Span {
           start: Position {
            line: 2,
            column: 48,
           },
           end: Position {
            line: 2,
            column: 50,
           },
          },
         },
        ),
       ],
      },
     ),
    },
   ),
   KeyValue(
    BindingKeyValue {
     from: [
      Raw(
       PartRaw {
        content: "machine",
        span: Span {
         start: Position {
          line: 3,
          column: 3,
         },
         end: Position {
          line: 3,
          column: 10,
         },
        },
       },
      ),
     ],
     to: FunctionApplication(
      FunctionApplication {
       function: Identifier(
        Identifier {
         id: "import",
         span: Span {
          start: Position {
           line: 3,
           column: 13,
          },
          end: Position {
           line: 3,
           column: 19,
          },
         },
        },
       ),
       arguments: [
        BinaryOperation(
         BinaryOperation {
          left: PropertyAccess(
           PropertyAccess {
            expression: Identifier(
             Identifier {
              id: "pkgs",
              span: Span {
               start: Position {
                line: 3,
                column: 21,
               },
               end: Position {
                line: 3,
                column: 25,
               },
              },
             },
            ),
            attribute_path: [
             Raw(
              PartRaw {
               content: "path",
               span: Span {
                start: Position {
                 line: 3,
                 column: 26,
                },
                end: Position {
                 line: 3,
                 column: 30,
                },
               },
              },
             ),
            ],
            default: None,
           },
          ),
          operator: Addition,
          right: String(
           String_ {
            parts: [
             Raw(
              PartRaw {
               content: "/nixos/lib/eval-config.nix",
               span: Span {
                start: Position {
                 line: 3,
                 column: 34,
                },
                end: Position {
                 line: 3,
                 column: 60,
                },
               },
              },
             ),
            ],
            span: Span {
             start: Position {
              line: 3,
              column: 33,
             },
             end: Position {
              line: 3,
              column: 61,
             },
            },
           },
          ),
         },
        ),
        Map(
         Map {
          recursive: false,
          bindings: [
           KeyValue(
            BindingKeyValue {
             from: [
              Raw(
               PartRaw {
                content: "system",
                span: Span {
                 start: Position {
                  line: 4,
                  column: 5,
                 },
                 end: Position {
                  line: 4,
                  column: 11,
                 },
                },
               },
              ),
             ],
             to: String(
              String_ {
               parts: [
                Raw(
                 PartRaw {
                  content: "x86_64-linux",
                  span: Span {
                   start: Position {
                    line: 4,
                    column: 15,
                   },
                   end: Position {
                    line: 4,
                    column: 27,
                   },
                  },
                 },
                ),
               ],
               span: Span {
                start: Position {
                 line: 4,
                 column: 14,
                },
                end: Position {
                 line: 4,
                 column: 28,
                },
               },
              },
             ),
            },
           ),
           KeyValue(
            BindingKeyValue {
             from: [
              Raw(
               PartRaw {
                content: "modules",
                span: Span {
                 start: Position {
                  line: 5,
                  column: 5,
                 },
                 end: Position {
                  line: 5,
                  column: 12,
                 },
                },
               },
              ),
             ],
             to: List(
              List {
               elements: [
                Function(
                 Function {
                  head: Destructured(
                   FunctionHeadDestructured {
                    ellipsis: true,
                    identifier: None,
                    arguments: [
                     FunctionHeadDestructuredArgument {
                      identifier: "config",
                      default: None,
                     },
                    ],
                   },
                  ),
                  body: Map(
                   Map {
                    recursive: false,
                    bindings: [
                     KeyValue(
                      BindingKeyValue {
                       from: [
                        Raw(
                         PartRaw {
                          content: "imports",
                          span: Span {
                           start: Position {
                            line: 6,
                            column: 25,
                           },
                           end: Position {
                            line: 6,
                            column: 32,
                           },
                          },
                         },
                        ),
                       ],
                       to: List(
                        List {
                         elements: [
                          Path(
                           Path {
                            parts: [
                             Raw(
                              PartRaw {
                               content: "./system.nix",
                               span: Span {
                                start: Position {
                                 line: 6,
                                 column: 37,
                                },
                                end: Position {
                                 line: 6,
                                 column: 49,
                                },
                               },
                              },
                             ),
                            ],
                            span: Span {
                             start: Position {
                              line: 6,
                              column: 37,
                             },
                             end: Position {
                              line: 6,
                              column: 49,
                             },
                            },
                           },
                          ),
                         ],
                         span: Span {
                          start: Position {
                           line: 6,
                           column: 35,
                          },
                          end: Position {
                           line: 6,
                           column: 51,
                          },
                         },
                        },
                       ),
                      },
                     ),
                    ],
                    span: Span {
                     start: Position {
                      line: 6,
                      column: 23,
                     },
                     end: Position {
                      line: 6,
                      column: 54,
                     },
                    },
                   },
                  ),
                  span: Span {
                   start: Position {
                    line: 6,
                    column: 8,
                   },
                   end: Position {
                    line: 6,
                    column: 54,
                   },
                  },
                 },
                ),
               ],
               span: Span {
                start: Position {
                 line: 5,
                 column: 15,
                },
                end: Position {
                 line: 7,
                 column: 6,
                },
               },
              },
             ),
            },
           ),
          ],
          span: Span {
           start: Position {
            line: 3,
            column: 63,
           },
           end: Position {
            line: 8,
            column: 4,
           },
          },
         },
        ),
       ],
      },
     ),
    },
   ),
  ],
  target: PropertyAccess(
   PropertyAccess {
    expression: Identifier(
     Identifier {
      id: "machine",
      span: Span {
       start: Position {
        line: 10,
        column: 3,
       },
       end: Position {
        line: 10,
        column: 10,
       },
      },
     },
    ),
    attribute_path: [
     Raw(
      PartRaw {
       content: "config",
       span: Span {
        start: Position {
         line: 10,
         column: 11,
        },
        end: Position {
         line: 10,
         column: 17,
        },
       },
      },
     ),
     Raw(
      PartRaw {
       content: "system",
       span: Span {
        start: Position {
         line: 10,
         column: 18,
        },
        end: Position {
         line: 10,
         column: 24,
        },
       },
      },
     ),
     Raw(
      PartRaw {
       content: "build",
       span: Span {
        start: Position {
         line: 10,
         column: 25,
        },
        end: Position {
         line: 10,
         column: 30,
        },
       },
      },
     ),
     Raw(
      PartRaw {
       content: "azureImage",
       span: Span {
        start: Position {
         line: 10,
         column: 31,
        },
        end: Position {
         line: 10,
         column: 41,
        },
       },
      },
     ),
    ],
    default: None,
   },
  ),
  span: Span {
   start: Position {
    line: 1,
    column: 1,
   },
   end: Position {
    line: 10,
    column: 41,
   },
  },
 },
)