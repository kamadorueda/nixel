Function(
 Function {
  head: Destructured(
   FunctionHeadDestructured {
    ellipsis: false,
    identifier: None,
    arguments: [
     FunctionHeadDestructuredArgument {
      identifier: "buildEnv",
      default: None,
     },
     FunctionHeadDestructuredArgument {
      identifier: "libwebcam",
      default: None,
     },
     FunctionHeadDestructuredArgument {
      identifier: "makeWrapper",
      default: None,
     },
     FunctionHeadDestructuredArgument {
      identifier: "runCommand",
      default: None,
     },
     FunctionHeadDestructuredArgument {
      identifier: "drivers",
      default: Some(
       List(
        List {
         elements: [],
         span: Span {
          start: Position {
           line: 5,
           column: 13,
          },
          end: Position {
           line: 5,
           column: 15,
          },
         },
        },
       ),
      ),
     },
     FunctionHeadDestructuredArgument {
      identifier: "udevDebug",
      default: Some(
       Identifier(
        Identifier {
         id: "false",
         span: Span {
          start: Position {
           line: 6,
           column: 15,
          },
          end: Position {
           line: 6,
           column: 20,
          },
         },
        },
       ),
      ),
     },
    ],
   },
  ),
  body: LetIn(
   LetIn {
    bindings: [
     KeyValue(
      BindingKeyValue {
       from: [
        Raw(
         PartRaw {
          content: "version",
          span: Span {
           start: Position {
            line: 10,
            column: 3,
           },
           end: Position {
            line: 10,
            column: 10,
           },
          },
         },
        ),
       ],
       to: String(
        String_ {
         parts: [
          Raw(
           PartRaw {
            content: "0.0.0",
            span: Span {
             start: Position {
              line: 10,
              column: 14,
             },
             end: Position {
              line: 10,
              column: 19,
             },
            },
           },
          ),
         ],
         span: Span {
          start: Position {
           line: 10,
           column: 13,
          },
          end: Position {
           line: 10,
           column: 20,
          },
         },
        },
       ),
      },
     ),
     KeyValue(
      BindingKeyValue {
       from: [
        Raw(
         PartRaw {
          content: "dataPath",
          span: Span {
           start: Position {
            line: 12,
            column: 3,
           },
           end: Position {
            line: 12,
            column: 11,
           },
          },
         },
        ),
       ],
       to: FunctionApplication(
        FunctionApplication {
         function: Identifier(
          Identifier {
           id: "buildEnv",
           span: Span {
            start: Position {
             line: 12,
             column: 14,
            },
            end: Position {
             line: 12,
             column: 22,
            },
           },
          },
         ),
         arguments: [
          Map(
           Map {
            recursive: false,
            bindings: [
             KeyValue(
              BindingKeyValue {
               from: [
                Raw(
                 PartRaw {
                  content: "name",
                  span: Span {
                   start: Position {
                    line: 13,
                    column: 5,
                   },
                   end: Position {
                    line: 13,
                    column: 9,
                   },
                  },
                 },
                ),
               ],
               to: String(
                String_ {
                 parts: [
                  Raw(
                   PartRaw {
                    content: "uvcdynctrl-with-drivers-data-path",
                    span: Span {
                     start: Position {
                      line: 13,
                      column: 13,
                     },
                     end: Position {
                      line: 13,
                      column: 46,
                     },
                    },
                   },
                  ),
                 ],
                 span: Span {
                  start: Position {
                   line: 13,
                   column: 12,
                  },
                  end: Position {
                   line: 13,
                   column: 47,
                  },
                 },
                },
               ),
              },
             ),
             KeyValue(
              BindingKeyValue {
               from: [
                Raw(
                 PartRaw {
                  content: "paths",
                  span: Span {
                   start: Position {
                    line: 14,
                    column: 5,
                   },
                   end: Position {
                    line: 14,
                    column: 10,
                   },
                  },
                 },
                ),
               ],
               to: BinaryOperation(
                BinaryOperation {
                 left: Identifier(
                  Identifier {
                   id: "drivers",
                   span: Span {
                    start: Position {
                     line: 14,
                     column: 13,
                    },
                    end: Position {
                     line: 14,
                     column: 20,
                    },
                   },
                  },
                 ),
                 operator: Concatenation,
                 right: List(
                  List {
                   elements: [
                    Identifier(
                     Identifier {
                      id: "libwebcam",
                      span: Span {
                       start: Position {
                        line: 14,
                        column: 26,
                       },
                       end: Position {
                        line: 14,
                        column: 35,
                       },
                      },
                     },
                    ),
                   ],
                   span: Span {
                    start: Position {
                     line: 14,
                     column: 24,
                    },
                    end: Position {
                     line: 14,
                     column: 37,
                    },
                   },
                  },
                 ),
                },
               ),
              },
             ),
             KeyValue(
              BindingKeyValue {
               from: [
                Raw(
                 PartRaw {
                  content: "pathsToLink",
                  span: Span {
                   start: Position {
                    line: 15,
                    column: 5,
                   },
                   end: Position {
                    line: 15,
                    column: 16,
                   },
                  },
                 },
                ),
               ],
               to: List(
                List {
                 elements: [
                  String(
                   String_ {
                    parts: [
                     Raw(
                      PartRaw {
                       content: "/share/uvcdynctrl/data",
                       span: Span {
                        start: Position {
                         line: 15,
                         column: 22,
                        },
                        end: Position {
                         line: 15,
                         column: 44,
                        },
                       },
                      },
                     ),
                    ],
                    span: Span {
                     start: Position {
                      line: 15,
                      column: 21,
                     },
                     end: Position {
                      line: 15,
                      column: 45,
                     },
                    },
                   },
                  ),
                 ],
                 span: Span {
                  start: Position {
                   line: 15,
                   column: 19,
                  },
                  end: Position {
                   line: 15,
                   column: 47,
                  },
                 },
                },
               ),
              },
             ),
             KeyValue(
              BindingKeyValue {
               from: [
                Raw(
                 PartRaw {
                  content: "ignoreCollisions",
                  span: Span {
                   start: Position {
                    line: 16,
                    column: 5,
                   },
                   end: Position {
                    line: 16,
                    column: 21,
                   },
                  },
                 },
                ),
               ],
               to: Identifier(
                Identifier {
                 id: "false",
                 span: Span {
                  start: Position {
                   line: 16,
                   column: 24,
                  },
                  end: Position {
                   line: 16,
                   column: 29,
                  },
                 },
                },
               ),
              },
             ),
            ],
            span: Span {
             start: Position {
              line: 12,
              column: 23,
             },
             end: Position {
              line: 17,
              column: 4,
             },
            },
           },
          ),
         ],
        },
       ),
      },
     ),
     KeyValue(
      BindingKeyValue {
       from: [
        Raw(
         PartRaw {
          content: "dataDir",
          span: Span {
           start: Position {
            line: 19,
            column: 3,
           },
           end: Position {
            line: 19,
            column: 10,
           },
          },
         },
        ),
       ],
       to: String(
        String_ {
         parts: [
          Interpolation(
           PartInterpolation {
            expression: Identifier(
             Identifier {
              id: "dataPath",
              span: Span {
               start: Position {
                line: 19,
                column: 16,
               },
               end: Position {
                line: 19,
                column: 24,
               },
              },
             },
            ),
           },
          ),
          Raw(
           PartRaw {
            content: "/share/uvcdynctrl/data",
            span: Span {
             start: Position {
              line: 19,
              column: 14,
             },
             end: Position {
              line: 19,
              column: 47,
             },
            },
           },
          ),
         ],
         span: Span {
          start: Position {
           line: 19,
           column: 13,
          },
          end: Position {
           line: 19,
           column: 48,
          },
         },
        },
       ),
      },
     ),
     KeyValue(
      BindingKeyValue {
       from: [
        Raw(
         PartRaw {
          content: "udevDebugVarValue",
          span: Span {
           start: Position {
            line: 20,
            column: 3,
           },
           end: Position {
            line: 20,
            column: 20,
           },
          },
         },
        ),
       ],
       to: IfThenElse(
        IfThenElse {
         predicate: Identifier(
          Identifier {
           id: "udevDebug",
           span: Span {
            start: Position {
             line: 20,
             column: 26,
            },
            end: Position {
             line: 20,
             column: 35,
            },
           },
          },
         ),
         then: String(
          String_ {
           parts: [
            Raw(
             PartRaw {
              content: "1",
              span: Span {
               start: Position {
                line: 20,
                column: 42,
               },
               end: Position {
                line: 20,
                column: 43,
               },
              },
             },
            ),
           ],
           span: Span {
            start: Position {
             line: 20,
             column: 41,
            },
            end: Position {
             line: 20,
             column: 44,
            },
           },
          },
         ),
         else_: String(
          String_ {
           parts: [
            Raw(
             PartRaw {
              content: "0",
              span: Span {
               start: Position {
                line: 20,
                column: 51,
               },
               end: Position {
                line: 20,
                column: 52,
               },
              },
             },
            ),
           ],
           span: Span {
            start: Position {
             line: 20,
             column: 50,
            },
            end: Position {
             line: 20,
             column: 53,
            },
           },
          },
         ),
         span: Span {
          start: Position {
           line: 20,
           column: 23,
          },
          end: Position {
           line: 20,
           column: 53,
          },
         },
        },
       ),
      },
     ),
    ],
    target: FunctionApplication(
     FunctionApplication {
      function: Identifier(
       Identifier {
        id: "runCommand",
        span: Span {
         start: Position {
          line: 23,
          column: 1,
         },
         end: Position {
          line: 23,
          column: 11,
         },
        },
       },
      ),
      arguments: [
       String(
        String_ {
         parts: [
          Raw(
           PartRaw {
            content: "uvcdynctrl-udev-rules-",
            span: Span {
             start: Position {
              line: 23,
              column: 13,
             },
             end: Position {
              line: 23,
              column: 45,
             },
            },
           },
          ),
          Interpolation(
           PartInterpolation {
            expression: Identifier(
             Identifier {
              id: "version",
              span: Span {
               start: Position {
                line: 23,
                column: 37,
               },
               end: Position {
                line: 23,
                column: 44,
               },
              },
             },
            ),
           },
          ),
         ],
         span: Span {
          start: Position {
           line: 23,
           column: 12,
          },
          end: Position {
           line: 23,
           column: 46,
          },
         },
        },
       ),
       Map(
        Map {
         recursive: false,
         bindings: [
          Inherit(
           BindingInherit {
            from: None,
            attributes: [
             Raw(
              PartRaw {
               content: "dataPath",
               span: Span {
                start: Position {
                 line: 25,
                 column: 11,
                },
                end: Position {
                 line: 25,
                 column: 19,
                },
               },
              },
             ),
            ],
            span: Span {
             start: Position {
              line: 24,
              column: 2,
             },
             end: Position {
              line: 25,
              column: 20,
             },
            },
           },
          ),
          KeyValue(
           BindingKeyValue {
            from: [
             Raw(
              PartRaw {
               content: "nativeBuildInputs",
               span: Span {
                start: Position {
                 line: 26,
                 column: 3,
                },
                end: Position {
                 line: 26,
                 column: 20,
                },
               },
              },
             ),
            ],
            to: List(
             List {
              elements: [
               Identifier(
                Identifier {
                 id: "makeWrapper",
                 span: Span {
                  start: Position {
                   line: 27,
                   column: 5,
                  },
                  end: Position {
                   line: 27,
                   column: 16,
                  },
                 },
                },
               ),
              ],
              span: Span {
               start: Position {
                line: 26,
                column: 23,
               },
               end: Position {
                line: 28,
                column: 4,
               },
              },
             },
            ),
           },
          ),
          KeyValue(
           BindingKeyValue {
            from: [
             Raw(
              PartRaw {
               content: "buildInputs",
               span: Span {
                start: Position {
                 line: 29,
                 column: 3,
                },
                end: Position {
                 line: 29,
                 column: 14,
                },
               },
              },
             ),
            ],
            to: List(
             List {
              elements: [
               Identifier(
                Identifier {
                 id: "libwebcam",
                 span: Span {
                  start: Position {
                   line: 30,
                   column: 5,
                  },
                  end: Position {
                   line: 30,
                   column: 14,
                  },
                 },
                },
               ),
              ],
              span: Span {
               start: Position {
                line: 29,
                column: 17,
               },
               end: Position {
                line: 31,
                column: 4,
               },
              },
             },
            ),
           },
          ),
          KeyValue(
           BindingKeyValue {
            from: [
             Raw(
              PartRaw {
               content: "dontPatchELF",
               span: Span {
                start: Position {
                 line: 32,
                 column: 3,
                },
                end: Position {
                 line: 32,
                 column: 15,
                },
               },
              },
             ),
            ],
            to: Identifier(
             Identifier {
              id: "true",
              span: Span {
               start: Position {
                line: 32,
                column: 18,
               },
               end: Position {
                line: 32,
                column: 22,
               },
              },
             },
            ),
           },
          ),
          KeyValue(
           BindingKeyValue {
            from: [
             Raw(
              PartRaw {
               content: "dontStrip",
               span: Span {
                start: Position {
                 line: 33,
                 column: 3,
                },
                end: Position {
                 line: 33,
                 column: 12,
                },
               },
              },
             ),
            ],
            to: Identifier(
             Identifier {
              id: "true",
              span: Span {
               start: Position {
                line: 33,
                column: 15,
               },
               end: Position {
                line: 33,
                column: 19,
               },
              },
             },
            ),
           },
          ),
          KeyValue(
           BindingKeyValue {
            from: [
             Raw(
              PartRaw {
               content: "preferLocalBuild",
               span: Span {
                start: Position {
                 line: 34,
                 column: 3,
                },
                end: Position {
                 line: 34,
                 column: 19,
                },
               },
              },
             ),
            ],
            to: Identifier(
             Identifier {
              id: "true",
              span: Span {
               start: Position {
                line: 34,
                column: 22,
               },
               end: Position {
                line: 34,
                column: 26,
               },
              },
             },
            ),
           },
          ),
         ],
         span: Span {
          start: Position {
           line: 24,
           column: 1,
          },
          end: Position {
           line: 35,
           column: 2,
          },
         },
        },
       ),
       IndentedString(
        IndentedString {
         parts: [
          Raw(
           PartRaw {
            content: "mkdir -p \"$out/lib/udev\"\nmakeWrapper \"",
            span: Span {
             start: Position {
              line: 37,
              column: 1,
             },
             end: Position {
              line: 38,
              column: 16,
             },
            },
           },
          ),
          Interpolation(
           PartInterpolation {
            expression: Identifier(
             Identifier {
              id: "libwebcam",
              span: Span {
               start: Position {
                line: 38,
                column: 18,
               },
               end: Position {
                line: 38,
                column: 27,
               },
              },
             },
            ),
           },
          ),
          Raw(
           PartRaw {
            content: "/lib/udev/uvcdynctrl\" \"$out/lib/udev/uvcdynctrl\" \\\n  --set NIX_UVCDYNCTRL_DATA_DIR \"",
            span: Span {
             start: Position {
              line: 37,
              column: 1,
             },
             end: Position {
              line: 39,
              column: 36,
             },
            },
           },
          ),
          Interpolation(
           PartInterpolation {
            expression: Identifier(
             Identifier {
              id: "dataDir",
              span: Span {
               start: Position {
                line: 39,
                column: 38,
               },
               end: Position {
                line: 39,
                column: 45,
               },
              },
             },
            ),
           },
          ),
          Raw(
           PartRaw {
            content: "\" \\\n  --set NIX_UVCDYNCTRL_UDEV_DEBUG \"",
            span: Span {
             start: Position {
              line: 37,
              column: 1,
             },
             end: Position {
              line: 40,
              column: 38,
             },
            },
           },
          ),
          Interpolation(
           PartInterpolation {
            expression: Identifier(
             Identifier {
              id: "udevDebugVarValue",
              span: Span {
               start: Position {
                line: 40,
                column: 40,
               },
               end: Position {
                line: 40,
                column: 57,
               },
              },
             },
            ),
           },
          ),
          Raw(
           PartRaw {
            content: "\"\n\nmkdir -p \"$out/lib/udev/rules.d\"\ncat \"",
            span: Span {
             start: Position {
              line: 37,
              column: 1,
             },
             end: Position {
              line: 43,
              column: 8,
             },
            },
           },
          ),
          Interpolation(
           PartInterpolation {
            expression: Identifier(
             Identifier {
              id: "libwebcam",
              span: Span {
               start: Position {
                line: 43,
                column: 10,
               },
               end: Position {
                line: 43,
                column: 19,
               },
              },
             },
            ),
           },
          ),
          Raw(
           PartRaw {
            content: "/lib/udev/rules.d/80-uvcdynctrl.rules\" | \\\n  sed -r \"s#RUN\\+\\=\\\"([^\\\"]+)\\\"#RUN\\+\\=\\\"$out/lib/udev/uvcdynctrl\\\"#g\" > \\\n  \"$out/lib/udev/rules.d/80-uvcdynctrl.rules\"\n",
            span: Span {
             start: Position {
              line: 37,
              column: 1,
             },
             end: Position {
              line: 46,
              column: 1,
             },
            },
           },
          ),
         ],
         span: Span {
          start: Position {
           line: 36,
           column: 1,
          },
          end: Position {
           line: 46,
           column: 3,
          },
         },
        },
       ),
      ],
     },
    ),
    span: Span {
     start: Position {
      line: 9,
      column: 1,
     },
     end: Position {
      line: 46,
      column: 3,
     },
    },
   },
  ),
  span: Span {
   start: Position {
    line: 1,
    column: 1,
   },
   end: Position {
    line: 46,
    column: 3,
   },
  },
 },
)