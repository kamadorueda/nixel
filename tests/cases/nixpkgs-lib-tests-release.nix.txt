Function(
 Function {
  head: Destructured(
   FunctionHeadDestructured {
    ellipsis: false,
    identifier: None,
    arguments: [
     FunctionHeadDestructuredArgument {
      identifier: "pkgs",
      default: Some(
       BinaryOperation(
        BinaryOperation {
         left: FunctionApplication(
          FunctionApplication {
           function: Identifier(
            Identifier {
             id: "import",
             span: Span {
              start: Position {
               line: 3,
               column: 10,
              },
              end: Position {
               line: 3,
               column: 16,
              },
             },
            },
           ),
           arguments: [
            Path(
             Path {
              parts: [
               Raw(
                PartRaw {
                 content: "../..",
                 span: Span {
                  start: Position {
                   line: 3,
                   column: 17,
                  },
                  end: Position {
                   line: 3,
                   column: 22,
                  },
                 },
                },
               ),
              ],
              span: Span {
               start: Position {
                line: 3,
                column: 17,
               },
               end: Position {
                line: 3,
                column: 22,
               },
              },
             },
            ),
            Map(
             Map {
              recursive: false,
              bindings: [],
              span: Span {
               start: Position {
                line: 3,
                column: 23,
               },
               end: Position {
                line: 3,
                column: 25,
               },
              },
             },
            ),
           ],
          },
         ),
         operator: Update,
         right: Map(
          Map {
           recursive: false,
           bindings: [
            KeyValue(
             BindingKeyValue {
              from: [
               Raw(
                PartRaw {
                 content: "lib",
                 span: Span {
                  start: Position {
                   line: 3,
                   column: 31,
                  },
                  end: Position {
                   line: 3,
                   column: 34,
                  },
                 },
                },
               ),
              ],
              to: FunctionApplication(
               FunctionApplication {
                function: Identifier(
                 Identifier {
                  id: "throw",
                  span: Span {
                   start: Position {
                    line: 3,
                    column: 37,
                   },
                   end: Position {
                    line: 3,
                    column: 42,
                   },
                  },
                 },
                ),
                arguments: [
                 String(
                  String_ {
                   parts: [
                    Raw(
                     PartRaw {
                      content: "pkgs.lib accessed, but the lib tests should use nixpkgs' lib path directly!",
                      span: Span {
                       start: Position {
                        line: 3,
                        column: 44,
                       },
                       end: Position {
                        line: 3,
                        column: 119,
                       },
                      },
                     },
                    ),
                   ],
                   span: Span {
                    start: Position {
                     line: 3,
                     column: 43,
                    },
                    end: Position {
                     line: 3,
                     column: 120,
                    },
                   },
                  },
                 ),
                ],
               },
              ),
             },
            ),
           ],
           span: Span {
            start: Position {
             line: 3,
             column: 29,
            },
            end: Position {
             line: 3,
             column: 123,
            },
           },
          },
         ),
        },
       ),
      ),
     },
    ],
   },
  ),
  body: FunctionApplication(
   FunctionApplication {
    function: PropertyAccess(
     PropertyAccess {
      expression: Identifier(
       Identifier {
        id: "pkgs",
        span: Span {
         start: Position {
          line: 6,
          column: 1,
         },
         end: Position {
          line: 6,
          column: 5,
         },
        },
       },
      ),
      attribute_path: [
       Raw(
        PartRaw {
         content: "runCommand",
         span: Span {
          start: Position {
           line: 6,
           column: 6,
          },
          end: Position {
           line: 6,
           column: 16,
          },
         },
        },
       ),
      ],
      default: None,
     },
    ),
    arguments: [
     String(
      String_ {
       parts: [
        Raw(
         PartRaw {
          content: "nixpkgs-lib-tests",
          span: Span {
           start: Position {
            line: 6,
            column: 18,
           },
           end: Position {
            line: 6,
            column: 35,
           },
          },
         },
        ),
       ],
       span: Span {
        start: Position {
         line: 6,
         column: 17,
        },
        end: Position {
         line: 6,
         column: 36,
        },
       },
      },
     ),
     Map(
      Map {
       recursive: false,
       bindings: [
        KeyValue(
         BindingKeyValue {
          from: [
           Raw(
            PartRaw {
             content: "buildInputs",
             span: Span {
              start: Position {
               line: 7,
               column: 3,
              },
              end: Position {
               line: 7,
               column: 14,
              },
             },
            },
           ),
          ],
          to: List(
           List {
            elements: [
             PropertyAccess(
              PropertyAccess {
               expression: Identifier(
                Identifier {
                 id: "pkgs",
                 span: Span {
                  start: Position {
                   line: 8,
                   column: 5,
                  },
                  end: Position {
                   line: 8,
                   column: 9,
                  },
                 },
                },
               ),
               attribute_path: [
                Raw(
                 PartRaw {
                  content: "nix",
                  span: Span {
                   start: Position {
                    line: 8,
                    column: 10,
                   },
                   end: Position {
                    line: 8,
                    column: 13,
                   },
                  },
                 },
                ),
               ],
               default: None,
              },
             ),
             FunctionApplication(
              FunctionApplication {
               function: Identifier(
                Identifier {
                 id: "import",
                 span: Span {
                  start: Position {
                   line: 9,
                   column: 6,
                  },
                  end: Position {
                   line: 9,
                   column: 12,
                  },
                 },
                },
               ),
               arguments: [
                Path(
                 Path {
                  parts: [
                   Raw(
                    PartRaw {
                     content: "./check-eval.nix",
                     span: Span {
                      start: Position {
                       line: 9,
                       column: 13,
                      },
                      end: Position {
                       line: 9,
                       column: 29,
                      },
                     },
                    },
                   ),
                  ],
                  span: Span {
                   start: Position {
                    line: 9,
                    column: 13,
                   },
                   end: Position {
                    line: 9,
                    column: 29,
                   },
                  },
                 },
                ),
               ],
              },
             ),
             FunctionApplication(
              FunctionApplication {
               function: Identifier(
                Identifier {
                 id: "import",
                 span: Span {
                  start: Position {
                   line: 10,
                   column: 6,
                  },
                  end: Position {
                   line: 10,
                   column: 12,
                  },
                 },
                },
               ),
               arguments: [
                Path(
                 Path {
                  parts: [
                   Raw(
                    PartRaw {
                     content: "./maintainers.nix",
                     span: Span {
                      start: Position {
                       line: 10,
                       column: 13,
                      },
                      end: Position {
                       line: 10,
                       column: 30,
                      },
                     },
                    },
                   ),
                  ],
                  span: Span {
                   start: Position {
                    line: 10,
                    column: 13,
                   },
                   end: Position {
                    line: 10,
                    column: 30,
                   },
                  },
                 },
                ),
                Map(
                 Map {
                  recursive: false,
                  bindings: [
                   Inherit(
                    BindingInherit {
                     from: None,
                     attributes: [
                      Raw(
                       PartRaw {
                        content: "pkgs",
                        span: Span {
                         start: Position {
                          line: 11,
                          column: 15,
                         },
                         end: Position {
                          line: 11,
                          column: 19,
                         },
                        },
                       },
                      ),
                     ],
                     span: Span {
                      start: Position {
                       line: 10,
                       column: 32,
                      },
                      end: Position {
                       line: 11,
                       column: 20,
                      },
                     },
                    },
                   ),
                   KeyValue(
                    BindingKeyValue {
                     from: [
                      Raw(
                       PartRaw {
                        content: "lib",
                        span: Span {
                         start: Position {
                          line: 12,
                          column: 7,
                         },
                         end: Position {
                          line: 12,
                          column: 10,
                         },
                        },
                       },
                      ),
                     ],
                     to: FunctionApplication(
                      FunctionApplication {
                       function: Identifier(
                        Identifier {
                         id: "import",
                         span: Span {
                          start: Position {
                           line: 12,
                           column: 13,
                          },
                          end: Position {
                           line: 12,
                           column: 19,
                          },
                         },
                        },
                       ),
                       arguments: [
                        Path(
                         Path {
                          parts: [
                           Raw(
                            PartRaw {
                             content: "../.",
                             span: Span {
                              start: Position {
                               line: 12,
                               column: 20,
                              },
                              end: Position {
                               line: 12,
                               column: 24,
                              },
                             },
                            },
                           ),
                          ],
                          span: Span {
                           start: Position {
                            line: 12,
                            column: 20,
                           },
                           end: Position {
                            line: 12,
                            column: 24,
                           },
                          },
                         },
                        ),
                       ],
                      },
                     ),
                    },
                   ),
                  ],
                  span: Span {
                   start: Position {
                    line: 10,
                    column: 31,
                   },
                   end: Position {
                    line: 13,
                    column: 6,
                   },
                  },
                 },
                ),
               ],
              },
             ),
             FunctionApplication(
              FunctionApplication {
               function: Identifier(
                Identifier {
                 id: "import",
                 span: Span {
                  start: Position {
                   line: 14,
                   column: 6,
                  },
                  end: Position {
                   line: 14,
                   column: 12,
                  },
                 },
                },
               ),
               arguments: [
                Path(
                 Path {
                  parts: [
                   Raw(
                    PartRaw {
                     content: "./teams.nix",
                     span: Span {
                      start: Position {
                       line: 14,
                       column: 13,
                      },
                      end: Position {
                       line: 14,
                       column: 24,
                      },
                     },
                    },
                   ),
                  ],
                  span: Span {
                   start: Position {
                    line: 14,
                    column: 13,
                   },
                   end: Position {
                    line: 14,
                    column: 24,
                   },
                  },
                 },
                ),
                Map(
                 Map {
                  recursive: false,
                  bindings: [
                   Inherit(
                    BindingInherit {
                     from: None,
                     attributes: [
                      Raw(
                       PartRaw {
                        content: "pkgs",
                        span: Span {
                         start: Position {
                          line: 15,
                          column: 15,
                         },
                         end: Position {
                          line: 15,
                          column: 19,
                         },
                        },
                       },
                      ),
                     ],
                     span: Span {
                      start: Position {
                       line: 14,
                       column: 26,
                      },
                      end: Position {
                       line: 15,
                       column: 20,
                      },
                     },
                    },
                   ),
                   KeyValue(
                    BindingKeyValue {
                     from: [
                      Raw(
                       PartRaw {
                        content: "lib",
                        span: Span {
                         start: Position {
                          line: 16,
                          column: 7,
                         },
                         end: Position {
                          line: 16,
                          column: 10,
                         },
                        },
                       },
                      ),
                     ],
                     to: FunctionApplication(
                      FunctionApplication {
                       function: Identifier(
                        Identifier {
                         id: "import",
                         span: Span {
                          start: Position {
                           line: 16,
                           column: 13,
                          },
                          end: Position {
                           line: 16,
                           column: 19,
                          },
                         },
                        },
                       ),
                       arguments: [
                        Path(
                         Path {
                          parts: [
                           Raw(
                            PartRaw {
                             content: "../.",
                             span: Span {
                              start: Position {
                               line: 16,
                               column: 20,
                              },
                              end: Position {
                               line: 16,
                               column: 24,
                              },
                             },
                            },
                           ),
                          ],
                          span: Span {
                           start: Position {
                            line: 16,
                            column: 20,
                           },
                           end: Position {
                            line: 16,
                            column: 24,
                           },
                          },
                         },
                        ),
                       ],
                      },
                     ),
                    },
                   ),
                  ],
                  span: Span {
                   start: Position {
                    line: 14,
                    column: 25,
                   },
                   end: Position {
                    line: 17,
                    column: 6,
                   },
                  },
                 },
                ),
               ],
              },
             ),
            ],
            span: Span {
             start: Position {
              line: 7,
              column: 17,
             },
             end: Position {
              line: 18,
              column: 4,
             },
            },
           },
          ),
         },
        ),
       ],
       span: Span {
        start: Position {
         line: 6,
         column: 37,
        },
        end: Position {
         line: 19,
         column: 2,
        },
       },
      },
     ),
     IndentedString(
      IndentedString {
       parts: [
        Raw(
         PartRaw {
          content: "datadir=\"",
          span: Span {
           start: Position {
            line: 20,
            column: 1,
           },
           end: Position {
            line: 20,
            column: 14,
           },
          },
         },
        ),
        Interpolation(
         PartInterpolation {
          expression: PropertyAccess(
           PropertyAccess {
            expression: Identifier(
             Identifier {
              id: "pkgs",
              span: Span {
               start: Position {
                line: 20,
                column: 16,
               },
               end: Position {
                line: 20,
                column: 20,
               },
              },
             },
            ),
            attribute_path: [
             Raw(
              PartRaw {
               content: "nix",
               span: Span {
                start: Position {
                 line: 20,
                 column: 21,
                },
                end: Position {
                 line: 20,
                 column: 24,
                },
               },
              },
             ),
            ],
            default: None,
           },
          ),
         },
        ),
        Raw(
         PartRaw {
          content: "/share\"\nexport TEST_ROOT=$(pwd)/test-tmp\nexport NIX_BUILD_HOOK=\nexport NIX_CONF_DIR=$TEST_ROOT/etc\nexport NIX_LOCALSTATE_DIR=$TEST_ROOT/var\nexport NIX_LOG_DIR=$TEST_ROOT/var/log/nix\nexport NIX_STATE_DIR=$TEST_ROOT/var/nix\nexport NIX_STORE_DIR=$TEST_ROOT/store\nexport PAGER=cat\ncacheDir=$TEST_ROOT/binary-cache\n\nmkdir -p $NIX_CONF_DIR\necho \"experimental-features = nix-command\" >> $NIX_CONF_DIR/nix.conf\n\nnix-store --init\n\ncp -r ",
          span: Span {
           start: Position {
            line: 20,
            column: 1,
           },
           end: Position {
            line: 36,
            column: 11,
           },
          },
         },
        ),
        Interpolation(
         PartInterpolation {
          expression: Path(
           Path {
            parts: [
             Raw(
              PartRaw {
               content: "../.",
               span: Span {
                start: Position {
                 line: 36,
                 column: 13,
                },
                end: Position {
                 line: 36,
                 column: 17,
                },
               },
              },
             ),
            ],
            span: Span {
             start: Position {
              line: 36,
              column: 13,
             },
             end: Position {
              line: 36,
              column: 17,
             },
            },
           },
          ),
         },
        ),
        Raw(
         PartRaw {
          content: " lib\necho \"Running lib/tests/modules.sh\"\nbash lib/tests/modules.sh\n\necho \"Running lib/tests/sources.sh\"\nTEST_LIB=$PWD/lib bash lib/tests/sources.sh\n\ntouch $out\n",
          span: Span {
           start: Position {
            line: 20,
            column: 1,
           },
           end: Position {
            line: 44,
            column: 1,
           },
          },
         },
        ),
       ],
       span: Span {
        start: Position {
         line: 19,
         column: 3,
        },
        end: Position {
         line: 44,
         column: 3,
        },
       },
      },
     ),
    ],
   },
  ),
  span: Span {
   start: Position {
    line: 1,
    column: 1,
   },
   end: Position {
    line: 44,
    column: 3,
   },
  },
 },
)