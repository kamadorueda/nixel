Function(
 Function {
  head: Destructured(
   FunctionHeadDestructured {
    identifier: None,
    arguments: [
     FunctionHeadDestructuredArgument {
      identifier: "stdenv",
      default: None,
     },
     FunctionHeadDestructuredArgument {
      identifier: "closureInfo",
      default: None,
     },
     FunctionHeadDestructuredArgument {
      identifier: "xorriso",
      default: None,
     },
     FunctionHeadDestructuredArgument {
      identifier: "syslinux",
      default: None,
     },
     FunctionHeadDestructuredArgument {
      identifier: "libossp_uuid",
      default: None,
     },
     FunctionHeadDestructuredArgument {
      identifier: "isoName",
      default: Some(
       String(
        String_ {
         parts: [
          Raw(
           PartRaw {
            content: "cd.iso",
            span: Span {
             start: Position {
              line: 4,
              column: 14,
             },
             end: Position {
              line: 4,
              column: 20,
             },
            },
           },
          ),
         ],
         span: Span {
          start: Position {
           line: 4,
           column: 13,
          },
          end: Position {
           line: 4,
           column: 21,
          },
         },
        },
       ),
      ),
     },
     FunctionHeadDestructuredArgument {
      identifier: "contents",
      default: None,
     },
     FunctionHeadDestructuredArgument {
      identifier: "storeContents",
      default: Some(
       List(
        List {
         elements: [],
         span: Span {
          start: Position {
           line: 17,
           column: 19,
          },
          end: Position {
           line: 17,
           column: 21,
          },
         },
        },
       ),
      ),
     },
     FunctionHeadDestructuredArgument {
      identifier: "bootable",
      default: Some(
       Identifier(
        Identifier {
         id: "false",
         span: Span {
          start: Position {
           line: 20,
           column: 14,
          },
          end: Position {
           line: 20,
           column: 19,
          },
         },
        },
       ),
      ),
     },
     FunctionHeadDestructuredArgument {
      identifier: "efiBootable",
      default: Some(
       Identifier(
        Identifier {
         id: "false",
         span: Span {
          start: Position {
           line: 23,
           column: 17,
          },
          end: Position {
           line: 23,
           column: 22,
          },
         },
        },
       ),
      ),
     },
     FunctionHeadDestructuredArgument {
      identifier: "usbBootable",
      default: Some(
       Identifier(
        Identifier {
         id: "false",
         span: Span {
          start: Position {
           line: 26,
           column: 17,
          },
          end: Position {
           line: 26,
           column: 22,
          },
         },
        },
       ),
      ),
     },
     FunctionHeadDestructuredArgument {
      identifier: "bootImage",
      default: Some(
       String(
        String_ {
         parts: [],
         span: Span {
          start: Position {
           line: 29,
           column: 15,
          },
          end: Position {
           line: 29,
           column: 17,
          },
         },
        },
       ),
      ),
     },
     FunctionHeadDestructuredArgument {
      identifier: "efiBootImage",
      default: Some(
       String(
        String_ {
         parts: [],
         span: Span {
          start: Position {
           line: 32,
           column: 18,
          },
          end: Position {
           line: 32,
           column: 20,
          },
         },
        },
       ),
      ),
     },
     FunctionHeadDestructuredArgument {
      identifier: "isohybridMbrImage",
      default: Some(
       String(
        String_ {
         parts: [],
         span: Span {
          start: Position {
           line: 35,
           column: 23,
          },
          end: Position {
           line: 35,
           column: 25,
          },
         },
        },
       ),
      ),
     },
     FunctionHeadDestructuredArgument {
      identifier: "compressImage",
      default: Some(
       Identifier(
        Identifier {
         id: "false",
         span: Span {
          start: Position {
           line: 38,
           column: 19,
          },
          end: Position {
           line: 38,
           column: 24,
          },
         },
        },
       ),
      ),
     },
     FunctionHeadDestructuredArgument {
      identifier: "zstd",
      default: None,
     },
     FunctionHeadDestructuredArgument {
      identifier: "volumeID",
      default: Some(
       String(
        String_ {
         parts: [],
         span: Span {
          start: Position {
           line: 41,
           column: 14,
          },
          end: Position {
           line: 41,
           column: 16,
          },
         },
        },
       ),
      ),
     },
    ],
    ellipsis: false,
   },
  ),
  body: Assert(
   Assert {
    expression: BinaryOperation(
     BinaryOperation {
      left: Identifier(
       Identifier {
        id: "bootable",
        span: Span {
         start: Position {
          line: 44,
          column: 8,
         },
         end: Position {
          line: 44,
          column: 16,
         },
        },
       },
      ),
      operator: Implication,
      right: BinaryOperation(
       BinaryOperation {
        left: Identifier(
         Identifier {
          id: "bootImage",
          span: Span {
           start: Position {
            line: 44,
            column: 20,
           },
           end: Position {
            line: 44,
            column: 29,
           },
          },
         },
        ),
        operator: NotEqualTo,
        right: String(
         String_ {
          parts: [],
          span: Span {
           start: Position {
            line: 44,
            column: 33,
           },
           end: Position {
            line: 44,
            column: 35,
           },
          },
         },
        ),
       },
      ),
     },
    ),
    target: Assert(
     Assert {
      expression: BinaryOperation(
       BinaryOperation {
        left: Identifier(
         Identifier {
          id: "efiBootable",
          span: Span {
           start: Position {
            line: 45,
            column: 8,
           },
           end: Position {
            line: 45,
            column: 19,
           },
          },
         },
        ),
        operator: Implication,
        right: BinaryOperation(
         BinaryOperation {
          left: Identifier(
           Identifier {
            id: "efiBootImage",
            span: Span {
             start: Position {
              line: 45,
              column: 23,
             },
             end: Position {
              line: 45,
              column: 35,
             },
            },
           },
          ),
          operator: NotEqualTo,
          right: String(
           String_ {
            parts: [],
            span: Span {
             start: Position {
              line: 45,
              column: 39,
             },
             end: Position {
              line: 45,
              column: 41,
             },
            },
           },
          ),
         },
        ),
       },
      ),
      target: Assert(
       Assert {
        expression: BinaryOperation(
         BinaryOperation {
          left: Identifier(
           Identifier {
            id: "usbBootable",
            span: Span {
             start: Position {
              line: 46,
              column: 8,
             },
             end: Position {
              line: 46,
              column: 19,
             },
            },
           },
          ),
          operator: Implication,
          right: BinaryOperation(
           BinaryOperation {
            left: Identifier(
             Identifier {
              id: "isohybridMbrImage",
              span: Span {
               start: Position {
                line: 46,
                column: 23,
               },
               end: Position {
                line: 46,
                column: 40,
               },
              },
             },
            ),
            operator: NotEqualTo,
            right: String(
             String_ {
              parts: [],
              span: Span {
               start: Position {
                line: 46,
                column: 44,
               },
               end: Position {
                line: 46,
                column: 46,
               },
              },
             },
            ),
           },
          ),
         },
        ),
        target: FunctionApplication(
         FunctionApplication {
          function: PropertyAccess(
           PropertyAccess {
            expression: Identifier(
             Identifier {
              id: "stdenv",
              span: Span {
               start: Position {
                line: 48,
                column: 1,
               },
               end: Position {
                line: 48,
                column: 7,
               },
              },
             },
            ),
            attribute_path: [
             Raw(
              PartRaw {
               content: "mkDerivation",
               span: Span {
                start: Position {
                 line: 48,
                 column: 8,
                },
                end: Position {
                 line: 48,
                 column: 20,
                },
               },
              },
             ),
            ],
            default: None,
           },
          ),
          arguments: [
           Map(
            Map {
             bindings: [
              KeyValue(
               BindingKeyValue {
                from: [
                 Raw(
                  PartRaw {
                   content: "name",
                   span: Span {
                    start: Position {
                     line: 49,
                     column: 3,
                    },
                    end: Position {
                     line: 49,
                     column: 7,
                    },
                   },
                  },
                 ),
                ],
                to: Identifier(
                 Identifier {
                  id: "isoName",
                  span: Span {
                   start: Position {
                    line: 49,
                    column: 10,
                   },
                   end: Position {
                    line: 49,
                    column: 17,
                   },
                  },
                 },
                ),
               },
              ),
              KeyValue(
               BindingKeyValue {
                from: [
                 Raw(
                  PartRaw {
                   content: "builder",
                   span: Span {
                    start: Position {
                     line: 50,
                     column: 3,
                    },
                    end: Position {
                     line: 50,
                     column: 10,
                    },
                   },
                  },
                 ),
                ],
                to: Path(
                 Path {
                  parts: [
                   Raw(
                    PartRaw {
                     content: "./make-iso9660-image.sh",
                     span: Span {
                      start: Position {
                       line: 50,
                       column: 13,
                      },
                      end: Position {
                       line: 50,
                       column: 36,
                      },
                     },
                    },
                   ),
                  ],
                  span: Span {
                   start: Position {
                    line: 50,
                    column: 13,
                   },
                   end: Position {
                    line: 50,
                    column: 36,
                   },
                  },
                 },
                ),
               },
              ),
              KeyValue(
               BindingKeyValue {
                from: [
                 Raw(
                  PartRaw {
                   content: "nativeBuildInputs",
                   span: Span {
                    start: Position {
                     line: 51,
                     column: 3,
                    },
                    end: Position {
                     line: 51,
                     column: 20,
                    },
                   },
                  },
                 ),
                ],
                to: List(
                 List {
                  elements: [
                   Identifier(
                    Identifier {
                     id: "xorriso",
                     span: Span {
                      start: Position {
                       line: 51,
                       column: 25,
                      },
                      end: Position {
                       line: 51,
                       column: 32,
                      },
                     },
                    },
                   ),
                   Identifier(
                    Identifier {
                     id: "syslinux",
                     span: Span {
                      start: Position {
                       line: 51,
                       column: 33,
                      },
                      end: Position {
                       line: 51,
                       column: 41,
                      },
                     },
                    },
                   ),
                   Identifier(
                    Identifier {
                     id: "zstd",
                     span: Span {
                      start: Position {
                       line: 51,
                       column: 42,
                      },
                      end: Position {
                       line: 51,
                       column: 46,
                      },
                     },
                    },
                   ),
                   Identifier(
                    Identifier {
                     id: "libossp_uuid",
                     span: Span {
                      start: Position {
                       line: 51,
                       column: 47,
                      },
                      end: Position {
                       line: 51,
                       column: 59,
                      },
                     },
                    },
                   ),
                  ],
                  span: Span {
                   start: Position {
                    line: 51,
                    column: 23,
                   },
                   end: Position {
                    line: 51,
                    column: 61,
                   },
                  },
                 },
                ),
               },
              ),
              Inherit(
               BindingInherit {
                from: None,
                attributes: [
                 Raw(
                  PartRaw {
                   content: "isoName",
                   span: Span {
                    start: Position {
                     line: 53,
                     column: 11,
                    },
                    end: Position {
                     line: 53,
                     column: 18,
                    },
                   },
                  },
                 ),
                 Raw(
                  PartRaw {
                   content: "bootable",
                   span: Span {
                    start: Position {
                     line: 53,
                     column: 19,
                    },
                    end: Position {
                     line: 53,
                     column: 27,
                    },
                   },
                  },
                 ),
                 Raw(
                  PartRaw {
                   content: "bootImage",
                   span: Span {
                    start: Position {
                     line: 53,
                     column: 28,
                    },
                    end: Position {
                     line: 53,
                     column: 37,
                    },
                   },
                  },
                 ),
                 Raw(
                  PartRaw {
                   content: "compressImage",
                   span: Span {
                    start: Position {
                     line: 53,
                     column: 38,
                    },
                    end: Position {
                     line: 53,
                     column: 51,
                    },
                   },
                  },
                 ),
                 Raw(
                  PartRaw {
                   content: "volumeID",
                   span: Span {
                    start: Position {
                     line: 53,
                     column: 52,
                    },
                    end: Position {
                     line: 53,
                     column: 60,
                    },
                   },
                  },
                 ),
                 Raw(
                  PartRaw {
                   content: "efiBootImage",
                   span: Span {
                    start: Position {
                     line: 53,
                     column: 61,
                    },
                    end: Position {
                     line: 53,
                     column: 73,
                    },
                   },
                  },
                 ),
                 Raw(
                  PartRaw {
                   content: "efiBootable",
                   span: Span {
                    start: Position {
                     line: 53,
                     column: 74,
                    },
                    end: Position {
                     line: 53,
                     column: 85,
                    },
                   },
                  },
                 ),
                 Raw(
                  PartRaw {
                   content: "isohybridMbrImage",
                   span: Span {
                    start: Position {
                     line: 53,
                     column: 86,
                    },
                    end: Position {
                     line: 53,
                     column: 103,
                    },
                   },
                  },
                 ),
                 Raw(
                  PartRaw {
                   content: "usbBootable",
                   span: Span {
                    start: Position {
                     line: 53,
                     column: 104,
                    },
                    end: Position {
                     line: 53,
                     column: 115,
                    },
                   },
                  },
                 ),
                ],
                span: Span {
                 start: Position {
                  line: 48,
                  column: 22,
                 },
                 end: Position {
                  line: 53,
                  column: 116,
                 },
                },
               },
              ),
              KeyValue(
               BindingKeyValue {
                from: [
                 Raw(
                  PartRaw {
                   content: "sources",
                   span: Span {
                    start: Position {
                     line: 56,
                     column: 3,
                    },
                    end: Position {
                     line: 56,
                     column: 10,
                    },
                   },
                  },
                 ),
                ],
                to: FunctionApplication(
                 FunctionApplication {
                  function: Identifier(
                   Identifier {
                    id: "map",
                    span: Span {
                     start: Position {
                      line: 56,
                      column: 13,
                     },
                     end: Position {
                      line: 56,
                      column: 16,
                     },
                    },
                   },
                  ),
                  arguments: [
                   Function(
                    Function {
                     head: Simple(
                      FunctionHeadSimple {
                       identifier: "x",
                      },
                     ),
                     body: PropertyAccess(
                      PropertyAccess {
                       expression: Identifier(
                        Identifier {
                         id: "x",
                         span: Span {
                          start: Position {
                           line: 56,
                           column: 21,
                          },
                          end: Position {
                           line: 56,
                           column: 22,
                          },
                         },
                        },
                       ),
                       attribute_path: [
                        Raw(
                         PartRaw {
                          content: "source",
                          span: Span {
                           start: Position {
                            line: 56,
                            column: 23,
                           },
                           end: Position {
                            line: 56,
                            column: 29,
                           },
                          },
                         },
                        ),
                       ],
                       default: None,
                      },
                     ),
                     span: Span {
                      start: Position {
                       line: 56,
                       column: 18,
                      },
                      end: Position {
                       line: 56,
                       column: 29,
                      },
                     },
                    },
                   ),
                   Identifier(
                    Identifier {
                     id: "contents",
                     span: Span {
                      start: Position {
                       line: 56,
                       column: 31,
                      },
                      end: Position {
                       line: 56,
                       column: 39,
                      },
                     },
                    },
                   ),
                  ],
                 },
                ),
               },
              ),
              KeyValue(
               BindingKeyValue {
                from: [
                 Raw(
                  PartRaw {
                   content: "targets",
                   span: Span {
                    start: Position {
                     line: 57,
                     column: 3,
                    },
                    end: Position {
                     line: 57,
                     column: 10,
                    },
                   },
                  },
                 ),
                ],
                to: FunctionApplication(
                 FunctionApplication {
                  function: Identifier(
                   Identifier {
                    id: "map",
                    span: Span {
                     start: Position {
                      line: 57,
                      column: 13,
                     },
                     end: Position {
                      line: 57,
                      column: 16,
                     },
                    },
                   },
                  ),
                  arguments: [
                   Function(
                    Function {
                     head: Simple(
                      FunctionHeadSimple {
                       identifier: "x",
                      },
                     ),
                     body: PropertyAccess(
                      PropertyAccess {
                       expression: Identifier(
                        Identifier {
                         id: "x",
                         span: Span {
                          start: Position {
                           line: 57,
                           column: 21,
                          },
                          end: Position {
                           line: 57,
                           column: 22,
                          },
                         },
                        },
                       ),
                       attribute_path: [
                        Raw(
                         PartRaw {
                          content: "target",
                          span: Span {
                           start: Position {
                            line: 57,
                            column: 23,
                           },
                           end: Position {
                            line: 57,
                            column: 29,
                           },
                          },
                         },
                        ),
                       ],
                       default: None,
                      },
                     ),
                     span: Span {
                      start: Position {
                       line: 57,
                       column: 18,
                      },
                      end: Position {
                       line: 57,
                       column: 29,
                      },
                     },
                    },
                   ),
                   Identifier(
                    Identifier {
                     id: "contents",
                     span: Span {
                      start: Position {
                       line: 57,
                       column: 31,
                      },
                      end: Position {
                       line: 57,
                       column: 39,
                      },
                     },
                    },
                   ),
                  ],
                 },
                ),
               },
              ),
              KeyValue(
               BindingKeyValue {
                from: [
                 Raw(
                  PartRaw {
                   content: "objects",
                   span: Span {
                    start: Position {
                     line: 60,
                     column: 3,
                    },
                    end: Position {
                     line: 60,
                     column: 10,
                    },
                   },
                  },
                 ),
                ],
                to: FunctionApplication(
                 FunctionApplication {
                  function: Identifier(
                   Identifier {
                    id: "map",
                    span: Span {
                     start: Position {
                      line: 60,
                      column: 13,
                     },
                     end: Position {
                      line: 60,
                      column: 16,
                     },
                    },
                   },
                  ),
                  arguments: [
                   Function(
                    Function {
                     head: Simple(
                      FunctionHeadSimple {
                       identifier: "x",
                      },
                     ),
                     body: PropertyAccess(
                      PropertyAccess {
                       expression: Identifier(
                        Identifier {
                         id: "x",
                         span: Span {
                          start: Position {
                           line: 60,
                           column: 21,
                          },
                          end: Position {
                           line: 60,
                           column: 22,
                          },
                         },
                        },
                       ),
                       attribute_path: [
                        Raw(
                         PartRaw {
                          content: "object",
                          span: Span {
                           start: Position {
                            line: 60,
                            column: 23,
                           },
                           end: Position {
                            line: 60,
                            column: 29,
                           },
                          },
                         },
                        ),
                       ],
                       default: None,
                      },
                     ),
                     span: Span {
                      start: Position {
                       line: 60,
                       column: 18,
                      },
                      end: Position {
                       line: 60,
                       column: 29,
                      },
                     },
                    },
                   ),
                   Identifier(
                    Identifier {
                     id: "storeContents",
                     span: Span {
                      start: Position {
                       line: 60,
                       column: 31,
                      },
                      end: Position {
                       line: 60,
                       column: 44,
                      },
                     },
                    },
                   ),
                  ],
                 },
                ),
               },
              ),
              KeyValue(
               BindingKeyValue {
                from: [
                 Raw(
                  PartRaw {
                   content: "symlinks",
                   span: Span {
                    start: Position {
                     line: 61,
                     column: 3,
                    },
                    end: Position {
                     line: 61,
                     column: 11,
                    },
                   },
                  },
                 ),
                ],
                to: FunctionApplication(
                 FunctionApplication {
                  function: Identifier(
                   Identifier {
                    id: "map",
                    span: Span {
                     start: Position {
                      line: 61,
                      column: 14,
                     },
                     end: Position {
                      line: 61,
                      column: 17,
                     },
                    },
                   },
                  ),
                  arguments: [
                   Function(
                    Function {
                     head: Simple(
                      FunctionHeadSimple {
                       identifier: "x",
                      },
                     ),
                     body: PropertyAccess(
                      PropertyAccess {
                       expression: Identifier(
                        Identifier {
                         id: "x",
                         span: Span {
                          start: Position {
                           line: 61,
                           column: 22,
                          },
                          end: Position {
                           line: 61,
                           column: 23,
                          },
                         },
                        },
                       ),
                       attribute_path: [
                        Raw(
                         PartRaw {
                          content: "symlink",
                          span: Span {
                           start: Position {
                            line: 61,
                            column: 24,
                           },
                           end: Position {
                            line: 61,
                            column: 31,
                           },
                          },
                         },
                        ),
                       ],
                       default: None,
                      },
                     ),
                     span: Span {
                      start: Position {
                       line: 61,
                       column: 19,
                      },
                      end: Position {
                       line: 61,
                       column: 31,
                      },
                     },
                    },
                   ),
                   Identifier(
                    Identifier {
                     id: "storeContents",
                     span: Span {
                      start: Position {
                       line: 61,
                       column: 33,
                      },
                      end: Position {
                       line: 61,
                       column: 46,
                      },
                     },
                    },
                   ),
                  ],
                 },
                ),
               },
              ),
              KeyValue(
               BindingKeyValue {
                from: [
                 Raw(
                  PartRaw {
                   content: "closureInfo",
                   span: Span {
                    start: Position {
                     line: 64,
                     column: 3,
                    },
                    end: Position {
                     line: 64,
                     column: 14,
                    },
                   },
                  },
                 ),
                ],
                to: FunctionApplication(
                 FunctionApplication {
                  function: Identifier(
                   Identifier {
                    id: "closureInfo",
                    span: Span {
                     start: Position {
                      line: 64,
                      column: 17,
                     },
                     end: Position {
                      line: 64,
                      column: 28,
                     },
                    },
                   },
                  ),
                  arguments: [
                   Map(
                    Map {
                     bindings: [
                      KeyValue(
                       BindingKeyValue {
                        from: [
                         Raw(
                          PartRaw {
                           content: "rootPaths",
                           span: Span {
                            start: Position {
                             line: 64,
                             column: 31,
                            },
                            end: Position {
                             line: 64,
                             column: 40,
                            },
                           },
                          },
                         ),
                        ],
                        to: FunctionApplication(
                         FunctionApplication {
                          function: Identifier(
                           Identifier {
                            id: "map",
                            span: Span {
                             start: Position {
                              line: 64,
                              column: 43,
                             },
                             end: Position {
                              line: 64,
                              column: 46,
                             },
                            },
                           },
                          ),
                          arguments: [
                           Function(
                            Function {
                             head: Simple(
                              FunctionHeadSimple {
                               identifier: "x",
                              },
                             ),
                             body: PropertyAccess(
                              PropertyAccess {
                               expression: Identifier(
                                Identifier {
                                 id: "x",
                                 span: Span {
                                  start: Position {
                                   line: 64,
                                   column: 51,
                                  },
                                  end: Position {
                                   line: 64,
                                   column: 52,
                                  },
                                 },
                                },
                               ),
                               attribute_path: [
                                Raw(
                                 PartRaw {
                                  content: "object",
                                  span: Span {
                                   start: Position {
                                    line: 64,
                                    column: 53,
                                   },
                                   end: Position {
                                    line: 64,
                                    column: 59,
                                   },
                                  },
                                 },
                                ),
                               ],
                               default: None,
                              },
                             ),
                             span: Span {
                              start: Position {
                               line: 64,
                               column: 48,
                              },
                              end: Position {
                               line: 64,
                               column: 59,
                              },
                             },
                            },
                           ),
                           Identifier(
                            Identifier {
                             id: "storeContents",
                             span: Span {
                              start: Position {
                               line: 64,
                               column: 61,
                              },
                              end: Position {
                               line: 64,
                               column: 74,
                              },
                             },
                            },
                           ),
                          ],
                         },
                        ),
                       },
                      ),
                     ],
                     recursive: false,
                     span: Span {
                      start: Position {
                       line: 64,
                       column: 29,
                      },
                      end: Position {
                       line: 64,
                       column: 77,
                      },
                     },
                    },
                   ),
                  ],
                 },
                ),
               },
              ),
             ],
             recursive: false,
             span: Span {
              start: Position {
               line: 48,
               column: 21,
              },
              end: Position {
               line: 65,
               column: 2,
              },
             },
            },
           ),
          ],
         },
        ),
        span: Span {
         start: Position {
          line: 46,
          column: 1,
         },
         end: Position {
          line: 65,
          column: 2,
         },
        },
       },
      ),
      span: Span {
       start: Position {
        line: 45,
        column: 1,
       },
       end: Position {
        line: 65,
        column: 2,
       },
      },
     },
    ),
    span: Span {
     start: Position {
      line: 44,
      column: 1,
     },
     end: Position {
      line: 65,
      column: 2,
     },
    },
   },
  ),
  span: Span {
   start: Position {
    line: 1,
    column: 1,
   },
   end: Position {
    line: 65,
    column: 2,
   },
  },
 },
)