LetIn(
 LetIn {
  bindings: [
   KeyValue(
    BindingKeyValue {
     from: [
      Raw(
       PartRaw {
        content: "minimalModulesWarning",
        span: Span {
         start: Position {
          line: 3,
          column: 3,
         },
         end: Position {
          line: 3,
          column: 24,
         },
        },
       },
      ),
     ],
     to: FunctionApplication(
      FunctionApplication {
       function: Identifier(
        Identifier {
         id: "warn",
         span: Span {
          start: Position {
           line: 3,
           column: 27,
          },
          end: Position {
           line: 3,
           column: 31,
          },
         },
        },
       ),
       arguments: [
        String(
         String_ {
          parts: [
           Raw(
            PartRaw {
             content: "lib.nixos.evalModules is experimental and subject to change. See nixos/lib/default.nix",
             span: Span {
              start: Position {
               line: 3,
               column: 33,
              },
              end: Position {
               line: 3,
               column: 119,
              },
             },
            },
           ),
          ],
          span: Span {
           start: Position {
            line: 3,
            column: 32,
           },
           end: Position {
            line: 3,
            column: 120,
           },
          },
         },
        ),
        Identifier(
         Identifier {
          id: "null",
          span: Span {
           start: Position {
            line: 3,
            column: 121,
           },
           end: Position {
            line: 3,
            column: 125,
           },
          },
         },
        ),
       ],
      },
     ),
    },
   ),
   Inherit(
    BindingInherit {
     from: Some(
      Identifier(
       Identifier {
        id: "nonExtendedLib",
        span: Span {
         start: Position {
          line: 4,
          column: 12,
         },
         end: Position {
          line: 4,
          column: 26,
         },
        },
       },
      ),
     ),
     attributes: [
      Raw(
       PartRaw {
        content: "warn",
        span: Span {
         start: Position {
          line: 4,
          column: 28,
         },
         end: Position {
          line: 4,
          column: 32,
         },
        },
       },
      ),
     ],
     span: Span {
      start: Position {
       line: 1,
       column: 4,
      },
      end: Position {
       line: 4,
       column: 33,
      },
     },
    },
   ),
   KeyValue(
    BindingKeyValue {
     from: [
      Raw(
       PartRaw {
        content: "nonExtendedLib",
        span: Span {
         start: Position {
          line: 5,
          column: 3,
         },
         end: Position {
          line: 5,
          column: 17,
         },
        },
       },
      ),
     ],
     to: FunctionApplication(
      FunctionApplication {
       function: Identifier(
        Identifier {
         id: "import",
         span: Span {
          start: Position {
           line: 5,
           column: 20,
          },
          end: Position {
           line: 5,
           column: 26,
          },
         },
        },
       ),
       arguments: [
        Path(
         Path {
          parts: [
           Raw(
            PartRaw {
             content: "../../lib",
             span: Span {
              start: Position {
               line: 5,
               column: 27,
              },
              end: Position {
               line: 5,
               column: 36,
              },
             },
            },
           ),
          ],
          span: Span {
           start: Position {
            line: 5,
            column: 27,
           },
           end: Position {
            line: 5,
            column: 36,
           },
          },
         },
        ),
       ],
      },
     ),
    },
   ),
  ],
  target: Function(
   Function {
    head: Destructured(
     FunctionHeadDestructured {
      identifier: None,
      arguments: [
       FunctionHeadDestructuredArgument {
        identifier: "lib",
        default: Some(
         Identifier(
          Identifier {
           id: "nonExtendedLib",
           span: Span {
            start: Position {
             line: 8,
             column: 9,
            },
            end: Position {
             line: 8,
             column: 23,
            },
           },
          },
         ),
        ),
       },
       FunctionHeadDestructuredArgument {
        identifier: "featureFlags",
        default: Some(
         Map(
          Map {
           bindings: [],
           recursive: false,
           span: Span {
            start: Position {
             line: 12,
             column: 18,
            },
            end: Position {
             line: 12,
             column: 20,
            },
           },
          },
         ),
        ),
       },
      ],
      ellipsis: true,
     },
    ),
    body: LetIn(
     LetIn {
      bindings: [
       KeyValue(
        BindingKeyValue {
         from: [
          Raw(
           PartRaw {
            content: "seqIf",
            span: Span {
             start: Position {
              line: 19,
              column: 3,
             },
             end: Position {
              line: 19,
              column: 8,
             },
            },
           },
          ),
         ],
         to: Function(
          Function {
           head: Simple(
            FunctionHeadSimple {
             identifier: "cond",
            },
           ),
           body: IfThenElse(
            IfThenElse {
             predicate: Identifier(
              Identifier {
               id: "cond",
               span: Span {
                start: Position {
                 line: 19,
                 column: 20,
                },
                end: Position {
                 line: 19,
                 column: 24,
                },
               },
              },
             ),
             then: PropertyAccess(
              PropertyAccess {
               expression: Identifier(
                Identifier {
                 id: "builtins",
                 span: Span {
                  start: Position {
                   line: 19,
                   column: 30,
                  },
                  end: Position {
                   line: 19,
                   column: 38,
                  },
                 },
                },
               ),
               attribute_path: [
                Raw(
                 PartRaw {
                  content: "seq",
                  span: Span {
                   start: Position {
                    line: 19,
                    column: 39,
                   },
                   end: Position {
                    line: 19,
                    column: 42,
                   },
                  },
                 },
                ),
               ],
               default: None,
              },
             ),
             else_: Function(
              Function {
               head: Simple(
                FunctionHeadSimple {
                 identifier: "a",
                },
               ),
               body: Function(
                Function {
                 head: Simple(
                  FunctionHeadSimple {
                   identifier: "b",
                  },
                 ),
                 body: Identifier(
                  Identifier {
                   id: "b",
                   span: Span {
                    start: Position {
                     line: 19,
                     column: 54,
                    },
                    end: Position {
                     line: 19,
                     column: 55,
                    },
                   },
                  },
                 ),
                 span: Span {
                  start: Position {
                   line: 19,
                   column: 51,
                  },
                  end: Position {
                   line: 19,
                   column: 55,
                  },
                 },
                },
               ),
               span: Span {
                start: Position {
                 line: 19,
                 column: 48,
                },
                end: Position {
                 line: 19,
                 column: 55,
                },
               },
              },
             ),
             span: Span {
              start: Position {
               line: 19,
               column: 17,
              },
              end: Position {
               line: 19,
               column: 55,
              },
             },
            },
           ),
           span: Span {
            start: Position {
             line: 19,
             column: 11,
            },
            end: Position {
             line: 19,
             column: 55,
            },
           },
          },
         ),
        },
       ),
       KeyValue(
        BindingKeyValue {
         from: [
          Raw(
           PartRaw {
            content: "seqAttrsIf",
            span: Span {
             start: Position {
              line: 21,
              column: 3,
             },
             end: Position {
              line: 21,
              column: 13,
             },
            },
           },
          ),
         ],
         to: Function(
          Function {
           head: Simple(
            FunctionHeadSimple {
             identifier: "cond",
            },
           ),
           body: Function(
            Function {
             head: Simple(
              FunctionHeadSimple {
               identifier: "a",
              },
             ),
             body: FunctionApplication(
              FunctionApplication {
               function: PropertyAccess(
                PropertyAccess {
                 expression: Identifier(
                  Identifier {
                   id: "lib",
                   span: Span {
                    start: Position {
                     line: 21,
                     column: 25,
                    },
                    end: Position {
                     line: 21,
                     column: 28,
                    },
                   },
                  },
                 ),
                 attribute_path: [
                  Raw(
                   PartRaw {
                    content: "mapAttrs",
                    span: Span {
                     start: Position {
                      line: 21,
                      column: 29,
                     },
                     end: Position {
                      line: 21,
                      column: 37,
                     },
                    },
                   },
                  ),
                 ],
                 default: None,
                },
               ),
               arguments: [
                Function(
                 Function {
                  head: Simple(
                   FunctionHeadSimple {
                    identifier: "_",
                   },
                  ),
                  body: Function(
                   Function {
                    head: Simple(
                     FunctionHeadSimple {
                      identifier: "v",
                     },
                    ),
                    body: FunctionApplication(
                     FunctionApplication {
                      function: Identifier(
                       Identifier {
                        id: "seqIf",
                        span: Span {
                         start: Position {
                          line: 21,
                          column: 45,
                         },
                         end: Position {
                          line: 21,
                          column: 50,
                         },
                        },
                       },
                      ),
                      arguments: [
                       Identifier(
                        Identifier {
                         id: "cond",
                         span: Span {
                          start: Position {
                           line: 21,
                           column: 51,
                          },
                          end: Position {
                           line: 21,
                           column: 55,
                          },
                         },
                        },
                       ),
                       Identifier(
                        Identifier {
                         id: "a",
                         span: Span {
                          start: Position {
                           line: 21,
                           column: 56,
                          },
                          end: Position {
                           line: 21,
                           column: 57,
                          },
                         },
                        },
                       ),
                       Identifier(
                        Identifier {
                         id: "v",
                         span: Span {
                          start: Position {
                           line: 21,
                           column: 58,
                          },
                          end: Position {
                           line: 21,
                           column: 59,
                          },
                         },
                        },
                       ),
                      ],
                     },
                    ),
                    span: Span {
                     start: Position {
                      line: 21,
                      column: 42,
                     },
                     end: Position {
                      line: 21,
                      column: 59,
                     },
                    },
                   },
                  ),
                  span: Span {
                   start: Position {
                    line: 21,
                    column: 39,
                   },
                   end: Position {
                    line: 21,
                    column: 59,
                   },
                  },
                 },
                ),
               ],
              },
             ),
             span: Span {
              start: Position {
               line: 21,
               column: 22,
              },
              end: Position {
               line: 21,
               column: 60,
              },
             },
            },
           ),
           span: Span {
            start: Position {
             line: 21,
             column: 16,
            },
            end: Position {
             line: 21,
             column: 60,
            },
           },
          },
         ),
        },
       ),
       KeyValue(
        BindingKeyValue {
         from: [
          Raw(
           PartRaw {
            content: "eval-config-minimal",
            span: Span {
             start: Position {
              line: 23,
              column: 3,
             },
             end: Position {
              line: 23,
              column: 22,
             },
            },
           },
          ),
         ],
         to: FunctionApplication(
          FunctionApplication {
           function: Identifier(
            Identifier {
             id: "import",
             span: Span {
              start: Position {
               line: 23,
               column: 25,
              },
              end: Position {
               line: 23,
               column: 31,
              },
             },
            },
           ),
           arguments: [
            Path(
             Path {
              parts: [
               Raw(
                PartRaw {
                 content: "./eval-config-minimal.nix",
                 span: Span {
                  start: Position {
                   line: 23,
                   column: 32,
                  },
                  end: Position {
                   line: 23,
                   column: 57,
                  },
                 },
                },
               ),
              ],
              span: Span {
               start: Position {
                line: 23,
                column: 32,
               },
               end: Position {
                line: 23,
                column: 57,
               },
              },
             },
            ),
            Map(
             Map {
              bindings: [
               Inherit(
                BindingInherit {
                 from: None,
                 attributes: [
                  Raw(
                   PartRaw {
                    content: "lib",
                    span: Span {
                     start: Position {
                      line: 23,
                      column: 68,
                     },
                     end: Position {
                      line: 23,
                      column: 71,
                     },
                    },
                   },
                  ),
                 ],
                 span: Span {
                  start: Position {
                   line: 23,
                   column: 59,
                  },
                  end: Position {
                   line: 23,
                   column: 72,
                  },
                 },
                },
               ),
              ],
              recursive: false,
              span: Span {
               start: Position {
                line: 23,
                column: 58,
               },
               end: Position {
                line: 23,
                column: 74,
               },
              },
             },
            ),
           ],
          },
         ),
        },
       ),
       KeyValue(
        BindingKeyValue {
         from: [
          Raw(
           PartRaw {
            content: "testing-lib",
            span: Span {
             start: Position {
              line: 25,
              column: 3,
             },
             end: Position {
              line: 25,
              column: 14,
             },
            },
           },
          ),
         ],
         to: FunctionApplication(
          FunctionApplication {
           function: Identifier(
            Identifier {
             id: "import",
             span: Span {
              start: Position {
               line: 25,
               column: 17,
              },
              end: Position {
               line: 25,
               column: 23,
              },
             },
            },
           ),
           arguments: [
            Path(
             Path {
              parts: [
               Raw(
                PartRaw {
                 content: "./testing/default.nix",
                 span: Span {
                  start: Position {
                   line: 25,
                   column: 24,
                  },
                  end: Position {
                   line: 25,
                   column: 45,
                  },
                 },
                },
               ),
              ],
              span: Span {
               start: Position {
                line: 25,
                column: 24,
               },
               end: Position {
                line: 25,
                column: 45,
               },
              },
             },
            ),
            Map(
             Map {
              bindings: [
               Inherit(
                BindingInherit {
                 from: None,
                 attributes: [
                  Raw(
                   PartRaw {
                    content: "lib",
                    span: Span {
                     start: Position {
                      line: 25,
                      column: 56,
                     },
                     end: Position {
                      line: 25,
                      column: 59,
                     },
                    },
                   },
                  ),
                 ],
                 span: Span {
                  start: Position {
                   line: 25,
                   column: 47,
                  },
                  end: Position {
                   line: 25,
                   column: 60,
                  },
                 },
                },
               ),
              ],
              recursive: false,
              span: Span {
               start: Position {
                line: 25,
                column: 46,
               },
               end: Position {
                line: 25,
                column: 62,
               },
              },
             },
            ),
           ],
          },
         ),
        },
       ),
      ],
      target: Map(
       Map {
        bindings: [
         Inherit(
          BindingInherit {
           from: Some(
            FunctionApplication(
             FunctionApplication {
              function: Identifier(
               Identifier {
                id: "seqAttrsIf",
                span: Span {
                 start: Position {
                  line: 32,
                  column: 12,
                 },
                 end: Position {
                  line: 32,
                  column: 22,
                 },
                },
               },
              ),
              arguments: [
               UnaryOperation(
                UnaryOperation {
                 operator: Not,
                 operand: HasAttribute(
                  HasAttribute {
                   expression: Identifier(
                    Identifier {
                     id: "featureFlags",
                     span: Span {
                      start: Position {
                       line: 32,
                       column: 25,
                      },
                      end: Position {
                       line: 32,
                       column: 37,
                      },
                     },
                    },
                   ),
                   attribute_path: [
                    Raw(
                     PartRaw {
                      content: "minimalModules",
                      span: Span {
                       start: Position {
                        line: 32,
                        column: 38,
                       },
                       end: Position {
                        line: 32,
                        column: 52,
                       },
                      },
                     },
                    ),
                   ],
                  },
                 ),
                 span: Span {
                  start: Position {
                   line: 32,
                   column: 24,
                  },
                  end: Position {
                   line: 32,
                   column: 52,
                  },
                 },
                },
               ),
               Identifier(
                Identifier {
                 id: "minimalModulesWarning",
                 span: Span {
                  start: Position {
                   line: 32,
                   column: 54,
                  },
                  end: Position {
                   line: 32,
                   column: 75,
                  },
                 },
                },
               ),
               Identifier(
                Identifier {
                 id: "eval-config-minimal",
                 span: Span {
                  start: Position {
                   line: 32,
                   column: 76,
                  },
                  end: Position {
                   line: 32,
                   column: 95,
                  },
                 },
                },
               ),
              ],
             },
            ),
           ),
           attributes: [
            Raw(
             PartRaw {
              content: "evalModules",
              span: Span {
               start: Position {
                line: 33,
                column: 5,
               },
               end: Position {
                line: 33,
                column: 16,
               },
              },
             },
            ),
           ],
           span: Span {
            start: Position {
             line: 31,
             column: 2,
            },
            end: Position {
             line: 34,
             column: 6,
            },
           },
          },
         ),
         Inherit(
          BindingInherit {
           from: Some(
            Identifier(
             Identifier {
              id: "testing-lib",
              span: Span {
               start: Position {
                line: 36,
                column: 12,
               },
               end: Position {
                line: 36,
                column: 23,
               },
              },
             },
            ),
           ),
           attributes: [
            Raw(
             PartRaw {
              content: "evalTest",
              span: Span {
               start: Position {
                line: 37,
                column: 5,
               },
               end: Position {
                line: 37,
                column: 13,
               },
              },
             },
            ),
            Raw(
             PartRaw {
              content: "runTest",
              span: Span {
               start: Position {
                line: 38,
                column: 5,
               },
               end: Position {
                line: 38,
                column: 12,
               },
              },
             },
            ),
           ],
           span: Span {
            start: Position {
             line: 31,
             column: 2,
            },
            end: Position {
             line: 39,
             column: 6,
            },
           },
          },
         ),
        ],
        recursive: false,
        span: Span {
         start: Position {
          line: 31,
          column: 1,
         },
         end: Position {
          line: 41,
          column: 2,
         },
        },
       },
      ),
      span: Span {
       start: Position {
        line: 18,
        column: 1,
       },
       end: Position {
        line: 41,
        column: 2,
       },
      },
     },
    ),
    span: Span {
     start: Position {
      line: 7,
      column: 1,
     },
     end: Position {
      line: 41,
      column: 2,
     },
    },
   },
  ),
  span: Span {
   start: Position {
    line: 1,
    column: 1,
   },
   end: Position {
    line: 41,
    column: 2,
   },
  },
 },
)